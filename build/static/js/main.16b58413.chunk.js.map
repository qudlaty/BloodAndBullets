{"version":3,"sources":["helpers/Helpers.js","components/Square/Square.js","components/Board/Board.js","components/EntityCard/LinearDisplay.js","components/EntityCard/InventoryList.js","components/EntityCard/EntityCard.js","components/EntitiesList/EntitiesList.js","services/SquaresService.js","services/EntitiesService.js","services/index.js","components/Game/InspectedSquareInfo.js","services/EntitiesValues.js","services/GameModelService.js","services/GameLogicService.js","components/Game/Game.js","index.js"],"names":["resetGivenFieldsOnACollection","collection","fieldNames","forEach","item","fieldName","undefined","getNumberWithinBoundaries","value","min","max","getRandomIntInclusive","Math","floor","random","calculateAngle","x","y","angle","atan","PI","calculateDistance","sqrt","pow","Square","renderCounter","shouldComponentUpdate","nextProps","JSON","stringify","props","className","localId","this","squareId","active","isAvailableDestination","isChosenDestination","icon","isBreathing","isShooting","randomTime","toFixed","animationBreathing","targetCoords","targetPosition","projectileNumber","projectiles","customStyle","calcNewAangle","Helpers","position","distanceToTargetX","distanceToTargetY","actualDistance","weaponType","push","key","projectile","onClick","blood","style","animation","React","Component","Board","handleClick","bind","i","console","log","rowId","colId","square","squares","entity","rowNumber","colNumber","equipment","hands","type","cellId","rows","Array","size","fill","map","row","number","cells","cell","renderSquare","PureComponent","LinearDisplay","percentage","current","overload","progressStyle","width","title","label","InventoryList","reloadButton","inventory","inventoryItems","reload","rounds","maxRounds","name","EntityCard","renderCount","handleInventoryClick","itemName","onInventoryClick","renderAmmo","inHands","lifeSigns","isFriendly","inHandsArray","clear","display","textAlign","hp","maxHp","ListOfEntities","entitiesFriendly","entities","filter","obj","entitiesUnfriendly","arenaSize","getSquare","targetSquareIndex","setSquare","targetSquarePosition","squareIndex","setEntityWithinASquare","target","addBlood","amount","markAvailableDestinationsForSelectedEntity","j","getEntityId","findEntityById","id","moveEntityRandomly","oldPositionX","oldPositionY","newSquare","stopBreathingForKilledEntities","getEntitiesAtGivenPosition","potentialTargetEntity","setSelected","selected","selectedInEntities","checkAmmoAndCalculateDamageApplied","damageApplied","weapon","isAbleToFire","fire","fireAShot","ceaseFire","targetEntity","applyDamageToTargetEntity","ceaseFireNextTickIfTargetIsKilled","damage","bleeding","isEntityShootingProperly","applyEffectsOfBleeding","SquaresService","bleedingReductionPerTurn","moveEntityIntoChosenDestinations","moveDestination","moveEntities","JR","OP","EntitiesService","entitiesService","squaresService","InspectedSquareInfo","inspectedSquare","squareNumber","squarePosition","distanceInfo","distanceToSelected","RangedWeapon","causesBleeding","range","Rifle","Lazer","M16","L30","M40","age","head","hasWeapon","GameModel","Entities","GameLogic","run","access","Game","stepNumber","loop","processEntities","state","autoLoop","setTimeout","nextTick","setState","handleBoardClick","previousState","localCopyOfPreviousState","selectedSquareNumber","clickedEntity","selectedEntity","deselectAllEntities","processInterface","nuke","dmg","localCopyOfEntities","toggleRotateBoard","isBoardRotated","switchAutoLoop","prevState","concat","entityId","actualEntity","actualItem","nextState","calculateNextGameState","setSquaresAccordingToEntities","calculateNextInterfaceState","boardClassName","checked","onChange","render","document","getElementById"],"mappings":"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","file":"static/js/main.16b58413.chunk.js","sourcesContent":["export function resetGivenFieldsOnACollection(collection, ...fieldNames) {\r\n  collection.forEach(\r\n    item => {\r\n      fieldNames.forEach(fieldName => {\r\n        item && (item[fieldName] = undefined)\r\n      });\r\n    }\r\n  );\r\n}\r\n\r\nexport function getNumberWithinBoundaries(value, min, max) {\r\n  if( value < min) value = min;\r\n  if( value > max) value = max;\r\n  return value;\r\n}\r\n\r\nexport function getRandomIntInclusive(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function calculateAngle(x, y){\r\n  let angle;\r\n  if(y >= 0) {\r\n    angle = - Math.atan(\r\n      x/y\r\n    ) * (180/Math.PI);\r\n  } else if(y < 0) {\r\n    angle = (180/Math.PI) *\r\n      (\r\n        Math.atan(\r\n          x/-y\r\n        ) + Math.PI\r\n      )\r\n  }\r\n  return angle;\r\n}\r\n\r\nexport function calculateDistance(x,y) {\r\n\r\n  return Math.sqrt(\r\n    Math.pow(x, 2) + Math.pow(y, 2)\r\n  );\r\n}\r\n","import React from 'react';\r\nimport * as Helpers from '../../helpers'\r\nimport \"./Square.scss\";\r\n\r\nconst DISTANCE_BETWEEN_TILES = 38;\r\n\r\nclass Square extends React.Component {\r\n\r\n  renderCounter = 0\r\n\r\n  shouldComponentUpdate = (nextProps) => // only update if props differ\r\n    (JSON.stringify(nextProps) !== JSON.stringify(this.props));\r\n\r\n  render() {\r\n    //this.renderCounter++;\r\n    //console.log(\"Rendering Square\", this.renderCounter, this.props);\r\n\r\n    let className = \"square\";\r\n    let localId = `Square${this.props.squareId}`;\r\n\r\n    if(this.props.active) {\r\n      className += \" active \";\r\n    }\r\n\t\tif(this.props.isAvailableDestination) {\r\n\t\t\tclassName += \" is-available-destination \"\r\n\t\t}\r\n\t\tif(this.props.isChosenDestination) {\r\n\t\t\tclassName += \" is-chosen-destination \"\r\n\t\t}\r\n    if(this.props.icon){\r\n      if(this.props.isBreathing) {\r\n        className += \" breathing \";\r\n      } else {\r\n        className += \" dead \";\r\n      }\r\n      if(this.props.isShooting) {\r\n        className += \" shooting \";\r\n      }\r\n    }\r\n\r\n    let randomTime = `${(Math.random()+0.5).toFixed(2)}s`// 0.50 - 1.50s\r\n    let animationBreathing = this.props.isBreathing ?\r\n        `breathing ${randomTime} alternate infinite linear` : 'none';\r\n\r\n    let targetCoords = this.props.targetPosition;\r\n    let projectileNumber = 5;\r\n    let projectiles = [];\r\n    let customStyle = \"\";\r\n\r\n    let calcNewAangle = Helpers.calculateAngle;\r\n\r\n    if(\r\n      (targetCoords && this.props.position && this.props.isShooting)\r\n      &&\r\n      (\r\n        this.props.targetPosition.x !== this.props.position.x ||\r\n        this.props.targetPosition.y !== this.props.position.y\r\n      )\r\n    ) {\r\n\r\n      if(targetCoords) {\r\n        // TODO: Move this into a helper\r\n        \r\n        let distanceToTargetX =\r\n          DISTANCE_BETWEEN_TILES*(targetCoords.x-this.props.position.x);\r\n        let distanceToTargetY =\r\n          DISTANCE_BETWEEN_TILES*(targetCoords.y-this.props.position.y);\r\n\r\n        let actualDistance = Helpers.calculateDistance(\r\n          distanceToTargetX, distanceToTargetY\r\n        );\r\n\r\n        if(this.props.weaponType === 'lazer') {\r\n          // TODO: perhaps call to `visualizeShooting(from,to,weaponType)`\r\n          let className=`projectile${localId}_beam`;\r\n          let projectile= \"\";\r\n          let angle = calcNewAangle(distanceToTargetX, distanceToTargetY);\r\n          customStyle = `\r\n            @keyframes pulsing${localId} {\r\n              0%  {opacity: 0.1;}\r\n              100%  {opacity: 1;}\r\n            }\r\n\r\n            @keyframes elongating${localId} {\r\n              0%  {width: ${actualDistance - 20};}\r\n              100%  {width: ${actualDistance + 20};}\r\n            }\r\n\r\n            @keyframes swiping${localId} {\r\n              0%  {transform: rotate(${angle + 90 + -1}deg);}\r\n              50%  {transform: rotate(${angle + 90 + 1}deg);}\r\n              100%  {transform: rotate(${angle + 90 - 1}deg);}\r\n            }\r\n\r\n            .${className} {\r\n              width: ${actualDistance}px;\r\n              height: 3px;\r\n              border-radius: 5px;\r\n              background: #F00;\r\n              position: absolute;\r\n              top: 16px;\r\n              left: 16px;\r\n\r\n              transform: rotate(${angle + 90}deg);\r\n              transform-origin: left 0px;\r\n              animation: pulsing${localId} 0.1s linear infinite,\r\n              elongating${localId} 1s linear alternate infinite,\r\n              swiping${localId} 1s linear alternate infinite;\r\n              box-shadow: 0 0 5px 5px white;\r\n              z-index: 10;\r\n            }\r\n            `;\r\n          projectiles.push(<div key={className} className={className}>{projectile}</div>);\r\n        } else {\r\n\r\n          customStyle = `\r\n            @keyframes shooting${localId} {\r\n              0%   {transform: scale(1);}\r\n              100% {transform: translate(\r\n                ${36*(targetCoords.x-this.props.position.x)}px,\r\n                ${36*(targetCoords.y-this.props.position.y)}px\r\n              )}\r\n            }\r\n            `;\r\n\r\n          while(projectileNumber--) {\r\n            customStyle += `\r\n            .projectile${localId}_${projectileNumber} {\r\n              position: absolute;\r\n              top: -5px;\r\n              left: 0px;\r\n              width: 100%;\r\n              height: 100%;\r\n              line-height: 34px;\r\n              font-size: 30px;\r\n              animation: shooting${localId} 0.5s linear infinite;\r\n              animation-delay: ${projectileNumber - 1 * 0.3}s;\r\n              color: white;\r\n            }`;\r\n          };\r\n          let projectile = this.props.isShooting ? \".\" : \"\";\r\n\r\n          projectileNumber = 3;\r\n\r\n          while(projectileNumber--) {\r\n            let className=`projectile projectile${localId}_${projectileNumber}`\r\n            projectiles.push(<div key={className} className={className}>{projectile}</div>);\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <button className={className} onClick={() => this.props.onClick(this.props.squareId)}>\r\n        <div className=\"blood\">{this.props.blood}</div>\r\n        <div className=\"content\" style={{\r\n          animation: animationBreathing\r\n        }}>{this.props.icon}</div>\r\n        <style>\r\n            {customStyle}\r\n        </style>\r\n        {projectiles}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\nimport Square from '../Square';\nimport './Board.scss';\n\nexport default class Board extends React.PureComponent {\n  renderCounter = 0\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(i) {\n    console.log(\"Handles Click on Board\", i);\n    this.props.onClick(i);\n  }\n\n  renderSquare(i, rowId, colId) {\n    /*\n    We pass one and the same function to all the Squares when rendering,\n    so they do not detect getting a new fat-arrow function as a change of props.\n\n    This is CRUCIAL to only rerender squares with changed values.\n\n    Additionally, we need to ensure that Unchanged squares have the same values of objects passed down here.\n    */\n    let square = this.props.squares[i];\n    let entity = this.props.squares[i] && this.props.squares[i].entity;\n    return (\n      <Square\n        key={i}\n        squareId={i}\n        rowNumber={rowId}\n        colNumber={colId}\n\n        onClick={this.handleClick}\n\n        icon={entity && entity.icon}\n        active={entity && entity.active}\n        isBreathing={entity && entity.isBreathing}\n\n        isShooting={entity && entity.isShooting}\n        weaponType={entity && entity.equipment && entity.equipment.hands && entity.equipment.hands.type}\n\n        position={entity && entity.position}\n        targetPosition={entity && entity.targetPosition}\n\n        blood={square && square.blood}\n\n        isAvailableDestination={square && square.isAvailableDestination}\n        isChosenDestination={square && square.isChosenDestination}\n      />\n    );\n  }\n\n  render() {\n    // console.log(\"Rendering Board. #\", this.renderCounter++);\n\n    // Initial values for the Board\n    let cellId=0;\n    let rowId=0;\n    let colId;\n\n    let rows = Array(this.props.size).fill(null).map((row, number) => {\n      colId = 0;\n      let cells = Array(this.props.size).fill(null).map((cell, number) => {\n        return this.renderSquare(cellId++, rowId, colId++);\n      });\n      return (\n        <div key={rowId++} className=\"board-row\">\n          {cells}\n        </div>\n      );\n    });\n\n    let className = \"board \" + this.props.className;\n    return (\n      <div className={className}>\n        {rows}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './LinearDisplay.scss';\nexport default function LinearDisplay(props) {\n  let className=`linear-display ${props.className || ''}`\n  let percentage = ~~(props.current * 100 / props.max);\n  let overload = percentage > 100;\n  if(overload) {\n    percentage = 100;\n    className += \" overload \";\n  }\n\n  let progressStyle = {\n    width: `${percentage}%`,\n  }\n  let title = props.title || `${props.current}/${props.max}`;\n  return (\n    <div className={className}>\n      <div className=\"linear-display__label\">{props.label}:&nbsp;</div>\n      <div className=\"linear-display__bar-container\"\n        title={title}\n      >\n        <div className=\"linear-display__bar-progress\" style={progressStyle}>\n          <span className=\"linear-display__bar-progress-text\">{props.current}{overload ? '/'+props.max : ''}&nbsp;</span>\n        </div>\n      </div>\n      <div>&nbsp;</div>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport './InventoryList.scss';\r\nexport default function InventoryList(props) {\r\n\r\n  let className = `inventory-list ${props.className || ''}`\r\n\r\n  if(!props.inventory) {return null}\r\n  let reloadButton;\r\n  let inventoryItems = props.inventory.map(item => {\r\n    if(item.reload) {// has reload capability\r\n      let className = \" inventory-list__reload-button \";\r\n\r\n      if(item.rounds === 0 || item.rounds === 'empty') {\r\n        className += \" inventory-list__reload-button--empty \"\r\n      } else if (item.rounds < item.maxRounds) {\r\n        className += \" inventory-list__reload-button--partial \"\r\n      }\r\n      reloadButton =\r\n        <button\r\n          className={className}\r\n          onClick={() => {\r\n            item.reload();\r\n            props.onClick(item.name);// this only to trigger the render\r\n          }}\r\n        >Reload</button>\r\n    } else {\r\n      reloadButton = null;\r\n    }\r\n    return (\r\n      <div key={item.name}>\r\n        <div onClick={() => props.onClick(item.name || item)} key={item.name} className=\"inventory-list__item\">\r\n          <span>{item.name || item}</span>\r\n        </div>\r\n        {reloadButton}\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"inventory-list__label\">{props.label}:&nbsp;</div>\r\n      <div className=\"inventory-list__container\"\r\n        title={props.title}\r\n      >\r\n       {inventoryItems}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport LinearDisplay from './LinearDisplay';\r\nimport InventoryList from './InventoryList';\r\nimport './EntityCard.scss';\r\n\r\nclass EntityCard extends React.Component {\r\n  renderCount = 0\r\n  handleInventoryClick = (itemName) => {\r\n    this.props.onInventoryClick(this.props.entity, itemName);\r\n  }\r\n\r\n  renderAmmo = (inHands)=> {\r\n    if(inHands) {\r\n     return <LinearDisplay label=\"Rounds\" current={inHands.rounds} max={inHands.maxRounds} />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"Rendering EntityView. #\", this.renderCount++);\r\n    let { entity } = this.props;\r\n    /*\r\n      FIXME: Below should be separated into several sub-components\r\n      Each sub-component should receive flat data (position, hp, ...)\r\n     */\r\n    let className = \" entity \";\r\n    if(entity.active) {\r\n      className+=\" active \";\r\n    }\r\n\r\n    let { isBreathing, isFriendly } = entity;\r\n    let fof = isFriendly ? ' friendly ' : ' unfriendly ';\r\n    let lifeSigns = isBreathing ? \" ALIVE \" : \" DEAD \";\r\n    className += fof;\r\n    className += lifeSigns;\r\n    let inHands = entity.equipment && entity.equipment.hands;\r\n    let inHandsArray = (inHands && [inHands]) || [];\r\n\r\n\r\n    return (\r\n\r\n      <div className={className}>\r\n        <div>\r\n          <div className=\"position\" title=\"Position\">\r\n            <span> {entity.position.x} {entity.position.y} </span>\r\n          </div>\r\n\r\n          <div className=\"portrait\">\r\n            {entity.icon}\r\n          </div>\r\n        </div>\r\n        <strong title=\"Name\">{entity.name}</strong>\r\n        <br />\r\n        {` `}{lifeSigns}\r\n        <br />\r\n\r\n        <div style={{\r\n          clear: \"both\",\r\n          display: \"inline-block\",\r\n          textAlign: \"right\",\r\n        }}>\r\n          <LinearDisplay label=\"HP\" current={entity.hp} max={entity.maxHp} /><br/>\r\n          {this.renderAmmo(inHands)}\r\n        </div>\r\n        <InventoryList label=\"Equipped\" title=\"In hands\" onClick={this.handleInventoryClick} inventory={inHandsArray} />\r\n        <InventoryList label=\"Inventory\" title=\"In backpack\" onClick={this.handleInventoryClick} inventory={entity.inventory} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EntityCard;\r\n","import React from 'react';\r\nimport EntityCard from '../EntityCard';\r\nimport './EntitiesList.scss';\r\n\r\nexport default class ListOfEntities extends React.Component {\r\n  renderCounter = 0\r\n  render() {\r\n    // console.log(\"Rendering EntitiesList #\", this.renderCounter++);\r\n    \r\n    let entitiesFriendly =\r\n    this.props.entities.filter(entity=>entity.isFriendly).map(obj => {\r\n      return (\r\n        <EntityCard onInventoryClick={this.props.onInventoryClick} entity={obj} key={obj.name}/>\r\n      )\r\n    });\r\n\r\n    let entitiesUnfriendly =\r\n    this.props.entities.filter(entity=>!entity.isFriendly).map(obj => {\r\n      return (\r\n        <EntityCard entity={obj} key={obj.name}/>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <h4 className=\"list-of-entities__header\">List of Entities:</h4>\r\n        <div className=\"list-of-entities\">\r\n            {entitiesFriendly}\r\n        </div>\r\n        <div className=\"list-of-entities\">\r\n            {entitiesUnfriendly}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import * as Helpers from '../helpers/Helpers';\r\nconst arenaSize = 10;\r\n\r\nexport function getSquare (squares, x, y) {\r\n  return squares[targetSquareIndex(x, y, arenaSize)];\r\n}\r\n\r\nexport function setSquare(squares, x, y, value) {\r\n  squares[targetSquareIndex(x, y)] = value;\r\n}\r\n\r\nexport function targetSquareIndex(x, y) {\r\n  return y * arenaSize + x;\r\n}\r\n\r\nexport function targetSquarePosition(squareIndex) {\r\n  let x,y;\r\n\ty = Math.floor(squareIndex / arenaSize);\r\n\tx = (squareIndex % arenaSize);\r\n\treturn {x, y};\r\n}\r\n\r\nexport function setEntityWithinASquare(squares, x, y, entity) {\r\n  let target = targetSquareIndex(x, y);\r\n  if(!squares[target]) {\r\n    squares[target] = {};\r\n  }\r\n  squares[target].entity = entity;\r\n}\r\n\r\nexport function addBlood(square, amount) {\r\n  if(!square) {square = {}};\r\n  if(!square.blood) {\r\n    square.blood = amount;\r\n  } else {\r\n    square.blood += amount;\r\n  }\r\n}\r\n\r\nexport function markAvailableDestinationsForSelectedEntity(entity, squares) {\r\n\r\n  if(entity.active) {\r\n    let {x,y} = entity.position;\r\n\r\n    Helpers.resetGivenFieldsOnACollection(squares, 'isAvailableDestination');\r\n\r\n    for(let j = y - 1; j <= y + 1; j++){\r\n      if( j < 0 || j >= arenaSize){\r\n        continue\r\n      }\r\n      for(let i = x - 1; i <= x + 1; i++){\r\n        if( i < 0 || i >= arenaSize || (i === x && j === y)){\r\n          continue\r\n        }\r\n\r\n        let square = this.getSquare(squares, i, j );\r\n        if(!square) {square={}}\r\n        square.isAvailableDestination = true;\r\n        this.setSquare(squares, i, j, square);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { getSquare } from './SquaresService';\r\nimport * as SquaresService from './SquaresService';\r\nimport * as Helpers from '../helpers/Helpers';\r\nconst arenaSize = 10;\r\n\r\nexport function getEntityId(entity) {\r\n  return entity.name;\r\n}\r\n\r\nexport function findEntityById(entities, id) {\r\n  let result = entities.filter((entity) => entity.name === id)[0];\r\n  //console.log(\"found entity:\", result);\r\n  return result;\r\n}\r\n\r\nexport function moveEntityRandomly(squares, entity) {\r\n  if(!entity.isBreathing) return;\r\n  // modifies entity in-place\r\n  let oldPositionX = entity.position.x;\r\n  let oldPositionY = entity.position.y;\r\n\r\n  entity.position.x = entity.position.x + Helpers.getRandomIntInclusive(-1,1);\r\n  entity.position.y = entity.position.y + Helpers.getRandomIntInclusive(-1,1);\r\n\r\n  entity.position.x = Helpers.getNumberWithinBoundaries(entity.position.x, 0, arenaSize-1);\r\n  entity.position.y = Helpers.getNumberWithinBoundaries(entity.position.y, 0, arenaSize-1);\r\n\r\n  let newSquare = getSquare(squares, entity.position.x, entity.position.y);\r\n\r\n  if (newSquare && newSquare.entity) {\r\n    entity.position.x = oldPositionX;\r\n    entity.position.y = oldPositionY;\r\n  }\r\n\r\n  // NO RETURN AS IT'S MODIFIED IN-PLACE return entity;\r\n  // WHICH IS A BAD HABIT, BUT OH SO COMFY.\r\n}\r\n\r\nexport function stopBreathingForKilledEntities(entity) {\r\n  if(entity && entity.hp <= 0){\r\n    entity.isBreathing = false;\r\n    entity.hp = 0;\r\n  }\r\n  return entity;\r\n}\r\n\r\nexport function getEntitiesAtGivenPosition(entities, targetPosition) {\r\n  return entities.filter((potentialTargetEntity) => {\r\n    return (\r\n      potentialTargetEntity.position.x === targetPosition.x &&\r\n      potentialTargetEntity.position.y === targetPosition.y\r\n    );\r\n  });\r\n}\r\n\r\nexport function setSelected(entities, selected, value) {\r\n  let selectedInEntities = this.findEntityById(\r\n    entities,\r\n    this.getEntityId(selected)\r\n  );\r\n  if(value) {\r\n    selected.active = value;\r\n  } else {\r\n    selected = null;\r\n    console.log(\"Nullified:\", selected);\r\n  }\r\n  selectedInEntities.active = value;\r\n  return selected;\r\n}\r\n\r\nexport function checkAmmoAndCalculateDamageApplied(entity) {\r\n  let damageApplied = 0;\r\n  let weapon = entity.equipment && entity.equipment.hands;\r\n\r\n  if(!weapon) return 0;\r\n\r\n  if(weapon.isAbleToFire) {\r\n    damageApplied = weapon.fire();\r\n  }\r\n  if(weapon.rounds === 0) {\r\n    weapon.rounds = \"empty\";\r\n    entity.isShooting = false;\r\n  } else if(weapon.rounds === \"empty\") {\r\n    entity.isShooting = false;\r\n  }\r\n\r\n  return damageApplied;\r\n}\r\n\r\nexport function fireAShot(entities, entity) {\r\n  if(entity.ceaseFire) {\r\n    entity.isShooting = false;\r\n    entity.ceaseFire = false;\r\n    return;\r\n  }\r\n  let damageApplied = this.checkAmmoAndCalculateDamageApplied(entity);\r\n  let targetEntities =\r\n    this.getEntitiesAtGivenPosition(entities, entity.targetPosition);\r\n  targetEntities.forEach((targetEntity) => {\r\n    this.applyDamageToTargetEntity(targetEntity, damageApplied);\r\n    this.ceaseFireNextTickIfTargetIsKilled(entity, targetEntity);\r\n  });\r\n}\r\n\r\nexport function applyDamageToTargetEntity(targetEntity, damage) {\r\n  if(damage) {\r\n    targetEntity.hp -= damage;\r\n    targetEntity.bleeding = 5;\r\n  }\r\n}\r\n\r\nexport function ceaseFireNextTickIfTargetIsKilled(entity, targetEntity) {\r\n  if(targetEntity.hp < 0) {\r\n    //entity.isShooting = false;\r\n    entity.ceaseFire = true;\r\n  }\r\n}\r\n\r\nexport function isEntityShootingProperly(entity) {\r\n  return entity.isShooting && entity.targetPosition && (\r\n    entity.targetPosition.x !== entity.position.x ||\r\n    entity.targetPosition.y !== entity.position.y\r\n  );\r\n}\r\n\r\nexport function applyEffectsOfBleeding(entity, squares) {\r\n  if(entity.bleeding && entity.hp > 0) {\r\n    entity.hp -= entity.bleeding ;\r\n    let square = SquaresService.getSquare(squares, entity.position.x, entity.position.y);\r\n    SquaresService.addBlood(square, entity.bleeding);\r\n    entity.bleeding -= entity.bleedingReductionPerTurn || 1;\r\n  }\r\n  return entity;\r\n}\r\n\r\nexport function moveEntityIntoChosenDestinations(selected, entity){\r\n  if(entity.isBreathing && entity.moveDestination && selected) {\r\n    entity.position = entity.moveDestination;\r\n    selected.position = entity.position;\r\n    delete entity.moveDestination;\r\n  }\r\n}\r\n\r\nexport function moveEntities(entities, squares, selected) {\r\n  entities.forEach(\r\n    entity => this.moveEntityIntoChosenDestinations(\r\n      selected, entity\r\n    )\r\n  );\r\n  let JR = this.findEntityById(entities, \"John Rambo\");\r\n  let OP = this.findEntityById(entities, \"Squid\");\r\n  this.moveEntityRandomly(squares, JR);\r\n  this.moveEntityRandomly(squares, OP);\r\n}\r\n","import * as entitiesService from './EntitiesService';\nimport * as squaresService from './SquaresService';\n\nexport let EntitiesService = entitiesService;\nexport let SquaresService = squaresService;\n","import React from 'react';\r\nimport * as Helpers from '../../helpers'\r\nimport {SquaresService} from '../../services'\r\n\r\nexport default class InspectedSquareInfo extends React.Component {\r\n\r\n    render(){\r\n        //this.props.squareNumber\r\n        let inspectedSquare = this.props.squares[this.props.squareNumber];\r\n        let selected = this.props.selected;\r\n\r\n        if(!inspectedSquare) {\r\n            return <span>Nothing</span>\r\n        }\r\n        let squarePosition = SquaresService.targetSquarePosition(this.props.squareNumber);\r\n\r\n        let distanceInfo = '';\r\n        if(selected) {\r\n          let distanceToSelected = Helpers.calculateDistance(\r\n            squarePosition.x - selected.position.x,\r\n            squarePosition.y - selected.position.y\r\n          );\r\n          distanceInfo = (\r\n            <li>\r\n              Distance to selected: {~~distanceToSelected}\r\n            </li>\r\n          );\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            <h3>Square Info</h3>\r\n            <ul>\r\n                {distanceInfo}\r\n                <li>\r\n                    Blood amount: {~~inspectedSquare.blood}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","//TODO: Move this out of the component\r\nclass Weapon {\r\n  causesBleeding = 0\r\n  range = 0\r\n  damage =  0\r\n}\r\n\r\nclass RangedWeapon extends Weapon{\r\n  rounds = 0\r\n  maxRounds = 5\r\n\r\n  fire = () => {\r\n    this.rounds--;\r\n    console.log('firing rifle', this.damage);\r\n    return this.damage\r\n  }\r\n  get isAbleToFire() {\r\n    return this.rounds > 0;\r\n  }\r\n  reload = () => {\r\n    this.rounds = this.maxRounds;\r\n  }\r\n}\r\n\r\nclass Rifle extends RangedWeapon{\r\n  type = 'projectile'\r\n  causesBleeding =  2\r\n  range = 4\r\n\r\n}\r\n\r\nclass Lazer extends RangedWeapon{\r\n  type = 'lazer'\r\n  causesBleeding = 0\r\n  range = 6\r\n}\r\n\r\n\r\nclass M16 extends Rifle {\r\n  name = 'M16'\r\n  rounds = 20\r\n  maxRounds = 20\r\n  damage = 1\r\n}\r\n\r\nclass L30 extends Lazer {\r\n  name = 'Assault Lazer Rifle'\r\n  rounds = 3\r\n  maxRounds = 3\r\n  damage = 10\r\n}\r\n\r\nclass M40 extends Rifle {\r\n  name = 'M41A Pulse Rifle'\r\n  rounds = 40\r\n  maxRounds = 40\r\n  damage = 1\r\n}\r\n\r\nconst entities = [\r\n  {\r\n    name: \"John Rambo\", age: 40, hp: 95, maxHp: 100,\r\n    icon: \"😠\",\r\n    isBreathing: true,\r\n    isFriendly: true,\r\n    position: {x:8, y:8},\r\n    inventory: [{name:'KA-BAR'}, new M16()],\r\n    equipment: {head: 'Red Bandana', hands: null},\r\n    damage: 1, rounds: 10, maxRounds: 15, hasWeapon: true,\r\n  },\r\n  {\r\n    name: \"Ellen Replay\", age: 30, hp: 50, maxHp: 65,\r\n    icon: \"👩\",\r\n    isBreathing: true,\r\n    isFriendly: true,\r\n    position: {x:1, y:8},\r\n    inventory: [new M40(), {name:'Motion Detector'}],\r\n    equipment: {head: 'Afro'},\r\n    damage: 1, rounds: 10, maxRounds: 10, hasWeapon: true,\r\n  },\r\n  {\r\n    name: \"Lazer Blady\", age: 60, hp: 75, maxHp: 100,\r\n    icon: \"🧑🏻\",\r\n    isBreathing: true,\r\n    isFriendly: true,\r\n    position: {x:4, y:8},\r\n    inventory: [new L30(), new M16()],\r\n    equipment: {},\r\n    damage: 10, rounds: 3, maxRounds: 3, hasWeapon: true,\r\n  },\r\n  {\r\n    name: \"Lux Aeterna\", age: 20, hp: 50, maxHp: 50,\r\n    icon: \"👱‍♀️\",\r\n    isBreathing: true,\r\n    isFriendly: true,\r\n    position: {x:1, y:1},\r\n    inventory: [new L30()],\r\n    equipment: {},\r\n    damage: 4, rounds: 1, maxRounds: 1, hasWeapon: true,\r\n  },\r\n  {\r\n    name: \"Octo\", age: 8, hp: 288, maxHp: 300,\r\n    icon: \"🐙\",\r\n    isBreathing: true,\r\n    position: {x:8, y:2},\r\n  },\r\n  {\r\n    name: \"Squid\", age: 5, hp: 55, maxHp: 55,\r\n    icon: \"🦑\",\r\n    isBreathing: true,\r\n    position: {x:5, y:5},\r\n  },\r\n  {\r\n    name: \"Ant\", age: 1, hp: 35, maxHp: 40,\r\n    icon: \"🐜\",\r\n    isBreathing: true,\r\n    position: {x:7, y:6},\r\n  },\r\n  {\r\n    name: \"Spider\", age: 1, hp: 160, maxHp: 150,\r\n    icon: \"🕷️\",\r\n    isBreathing: true,\r\n    position: {x:9, y:3},\r\n    bleedingReductionPerTurn: 1,\r\n  },\r\n  {\r\n    name: \"Mosquito\", age: 1, hp: 12, maxHp: 20,\r\n    icon: \"🦟\",\r\n    isBreathing: true,\r\n    position: {x:2, y:7},\r\n  },\r\n  {\r\n    name: \"Microbe\", age: 1, hp: 1, maxHp: 5,\r\n    icon: \"🦠\",\r\n    isBreathing: true,\r\n    position: {x:3, y:5},\r\n  },\r\n\r\n];\r\n\r\nexport default entities;\r\n","import Entities from './EntitiesValues';\n\nclass GameModelClass {\n  constructor(Entities) {\n    this.entities = Entities;\n  }\n  access() {\n    console.log(\"Accessing Game Model\");\n    console.log(this.entities);\n  }\n}\n\nlet GameModel = new GameModelClass(Entities);\n\nexport default GameModel;\n","import GameModel from './GameModelService';\n\nclass GameLogicClass {\n  run = () => {\n    console.log(\"Running Game Logic\");\n    GameModel.access();\n    console.log(GameModel.entities);\n  }\n}\n\nconst GameLogic = new GameLogicClass();\nexport default GameLogic;\n","import React from 'react';\r\nimport Board from '../Board';\r\nimport EntitiesList from '../EntitiesList';\r\nimport InspectedSquareInfo from './InspectedSquareInfo'\r\n\r\nimport { EntitiesService, SquaresService } from '../../services';\r\nimport GameLogic from '../../services/GameLogicService'\r\nimport GameModel from '../../services/GameModelService'\r\n\r\nimport * as Helpers from '../../helpers';\r\nimport './Game.scss';\r\n\r\nexport default class Game extends React.PureComponent {\r\n  renderCounter = 0\r\n  stepNumber = 0\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Initial value of game state\r\n    this.state = {\r\n      selected: null,\r\n      arenaSize: 10,\r\n      isBoardRotated: false,\r\n      entities: GameModel.entities,\r\n      squares: [],\r\n      autoLoop: true,\r\n      selectedSquareNumber: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loop();\r\n  }\r\n\r\n  setSquaresAccordingToEntities() {\r\n    this.setState((previousState)=>{\r\n      let squares = [].concat(previousState.squares);\r\n\r\n\t\t\tHelpers.resetGivenFieldsOnACollection(squares, 'entity');\r\n      previousState.entities.forEach((entity)=>{\r\n        SquaresService.setEntityWithinASquare(\r\n          squares, entity.position.x, entity.position.y, entity\r\n        );\r\n      });\r\n\r\n      return {squares};\r\n    });\r\n  }\r\n\r\n  calculateNextGameState(previousState) {\r\n    let nextState = previousState;\r\n    let { entities, squares, selected } = nextState;\r\n\r\n    EntitiesService.moveEntities(entities, squares, selected);\r\n    entities.forEach(entity => {\r\n      if(EntitiesService.isEntityShootingProperly(entity)) {\r\n        EntitiesService.fireAShot(entities, entity);\r\n      }\r\n      entity = EntitiesService.applyEffectsOfBleeding(entity, squares);\r\n      entity = EntitiesService.stopBreathingForKilledEntities(entity);\r\n      SquaresService.markAvailableDestinationsForSelectedEntity(entity, squares)\r\n    });\r\n\r\n    return nextState;\r\n  }\r\n  calculateNextInterfaceState(previousState) {\r\n    let nextState = previousState;\r\n    let { entities, squares } = nextState;\r\n\r\n    entities.forEach(entity => {\r\n\r\n      SquaresService.markAvailableDestinationsForSelectedEntity(entity, squares)\r\n    });\r\n\r\n    return nextState;\r\n  }\r\n\r\n  processEntities() {\r\n    this.setState(\r\n      prevState => this.calculateNextGameState(prevState),\r\n      () => this.setSquaresAccordingToEntities()\r\n    );\r\n  }\r\n\r\n  processInterface() {\r\n    this.setState(\r\n      prevState => this.calculateNextInterfaceState(prevState),\r\n      () => this.setSquaresAccordingToEntities()\r\n    )\r\n  }\r\n\r\n  loop = () => {\r\n    this.stepNumber++;\r\n\r\n    this.processEntities();\r\n\r\n    if(this.state.autoLoop) {\r\n      setTimeout(this.loop, 1000);\r\n    }\r\n  }\r\n\r\n  nextTick = () => {\r\n    this.setState({autoLoop: false});\r\n    this.loop();\r\n  }\r\n\r\n  handleBoardClick = (i) => {\r\n    //console.log(\"CLICKED \", i);\r\n    GameLogic.run();\r\n    const deselectAllEntities = (entities) => {\r\n      entities.forEach((entity) => { entity.active = undefined; });\r\n    };\r\n\r\n    /* this should contain mostly function calls */\r\n\r\n    this.setState((previousState) => {\r\n      let localCopyOfPreviousState = previousState;\r\n      let { entities, squares, selected, selectedSquareNumber } = localCopyOfPreviousState;\r\n      selectedSquareNumber = i;\r\n\r\n      if(squares[i] && squares[i].entity) {// clicked an entity\r\n        let clickedEntity = squares[i].entity;\r\n        if(selected && !clickedEntity.isFriendly) {\r\n\r\n\r\n          // that is hostile, while we already have one selected\r\n          if(selected.name === clickedEntity.name) {\r\n            // second click on a hostile entity deselects it\r\n            selected = EntitiesService.setSelected(entities, selected, false);\r\n            console.log(selected);\r\n          } else {// clicked a non-selected hostile entity - attack\r\n            let selectedEntity = EntitiesService.findEntityById(\r\n              entities,\r\n              EntitiesService.getEntityId(selected)\r\n            );\r\n            selectedEntity.targetPosition = clickedEntity.position;\r\n            selectedEntity.isShooting = true;\r\n          }\r\n\r\n\r\n        } else {// clicked entity is friendly - select it\r\n          deselectAllEntities(entities);\r\n          selected = clickedEntity;\r\n          EntitiesService.setSelected(entities, selected, true);\r\n\t\t\t\t\tHelpers.resetGivenFieldsOnACollection(squares, 'isChosenDestination');\r\n        }\r\n\r\n      } else {// clicked an empty square\r\n\t\t\t\tif(squares[i] && squares[i].isAvailableDestination) {\r\n\r\n\t\t\t\t\tlet position = SquaresService.targetSquarePosition(i);\r\n\t\t\t\t\tlet entitiesAtGivenPosition = EntitiesService.getEntitiesAtGivenPosition(entities, selected.position);\r\n\t\t\t\t\tlet entity = entitiesAtGivenPosition[0];\r\n\t\t\t\t\tentity && (entity.moveDestination = position);\r\n\t\t\t\t\tHelpers.resetGivenFieldsOnACollection(squares, 'isChosenDestination');\r\n\t\t\t\t\tsquares[i].isChosenDestination = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// selected = null;\r\n\t\t\t\t\t// Helpers.resetGivenFieldsOnACollection(entities, 'active', 'isShooting');\r\n\t\t\t\t\t// Helpers.resetGivenFieldsOnACollection(squares, 'isChosenDestination', 'isAvailableDestination');\r\n\t\t\t\t}\r\n      }\r\n\r\n      return {entities, squares, selected, selectedSquareNumber}\r\n    }, ()=> {\r\n      this.processInterface();\r\n    });\r\n\r\n  }\r\n\r\n  nuke = (dmg) => {\r\n    //console.log(\"Nuking\")\r\n    this.setState( (state) => {\r\n      let localCopyOfEntities = state.entities;\r\n      localCopyOfEntities.forEach(entity => {\r\n        entity.hp = entity.hp - dmg;\r\n      });\r\n      return {entities: localCopyOfEntities}\r\n    }, () => {\r\n      this.processEntities();\r\n    });\r\n  }\r\n\r\n  toggleRotateBoard = () => {\r\n    this.setState({isBoardRotated: !this.state.isBoardRotated});\r\n  }\r\n\r\n  switchAutoLoop = () => {\r\n    this.setState((previousState) => {\r\n      return {autoLoop: !previousState.autoLoop};\r\n    },()=>{\r\n      if(this.state.autoLoop) {\r\n        this.loop();\r\n      }\r\n    });\r\n  }\r\n\r\n  onInventoryClick = (entity, itemName) => {\r\n    this.setState((prevState) => {\r\n      let entities = [].concat(prevState.entities);\r\n\r\n      let entityId = EntitiesService.getEntityId(entity);\r\n      let actualEntity = EntitiesService.findEntityById(entities, entityId);\r\n      let actualItem = EntitiesService.findEntityById(actualEntity.inventory, itemName);\r\n\r\n      actualEntity.equipment.hands = actualItem;\r\n\r\n      return {entities};\r\n    });\r\n\r\n    console.log(entity, itemName);\r\n  }\r\n\r\n  render() {\r\n    let boardClassName = this.state.isBoardRotated ? \"rotated-board\" : \"\";\r\n    // console.log(\"Rendering Game. #\", this.renderCounter++);\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={this.state.squares}\r\n            onClick={(i) => this.handleBoardClick(i)}\r\n            size={this.state.arenaSize}\r\n            className={boardClassName}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"game-info\">\r\n\r\n          <span className=\"selected\">Selected: {this.state.selected && this.state.selected.name}</span>\r\n          <button\r\n            onClick={\r\n              ()=>{\r\n                this.nuke(40);\r\n              }\r\n            }\r\n            className=\"button button-nuke\"\r\n          >Nuke All</button>\r\n          <button onClick={this.toggleRotateBoard} className=\"button\">Rotate Board</button>\r\n          <button onClick={this.nextTick} className=\"button\">Next Tick</button>\r\n          <span className=\"step-counter\">Tick: {this.stepNumber}</span>\r\n          <label className=\"auto-cycle button\">\r\n            <input type=\"checkbox\" checked={this.state.autoLoop ? 'checked' : ''} onChange={this.switchAutoLoop}/>\r\n            <span>Auto Cycle</span>\r\n          </label>\r\n          <ul>\r\n            <li>Click Ellen Replay on the board, to select her.</li>\r\n            <li>Click a target to shoot it.</li>\r\n          </ul>\r\n\r\n          <InspectedSquareInfo\r\n            squareNumber = {this.state.selectedSquareNumber}\r\n            squares = {this.state.squares}\r\n            selected = {this.state.selected}\r\n          />\r\n\r\n        </div>\r\n        <div className=\"game-list\">\r\n          <EntitiesList\r\n            entities={this.state.entities}\r\n            onInventoryClick= {this.onInventoryClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Game from './components/Game';\n\nimport './style.scss';\n\nrender(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}