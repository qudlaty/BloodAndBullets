"use strict";(self.webpackChunkBloodAndBullets=self.webpackChunkBloodAndBullets||[]).push([[343],{"./src/components/LinearDisplay/LinearDisplay.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{O:()=>LinearDisplay_LinearDisplay}),__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function LinearDisplay_LinearDisplay(props){let className="linear-display ".concat(props.className||""),percentage=~~(100*props.current/props.max),overload=percentage>100,negative=percentage<0;overload&&(percentage=100,className+=" linear-display--overloaded"),negative&&(percentage=0);let progressStyle={width:"".concat(percentage,"%")},title=props.title||"".concat(props.current,"/").concat(props.max),amount=props.current,divider=1;props.max>=40&&props.max<100?divider=5:props.max>=100&&(divider=10);let gridSize=100/(amount/=divider),color="rgba(200,200,200,0.4)";return color="black",Object.assign(progressStyle,{backgroundSize:"".concat(gridSize,"% 100%"),backgroundImage:"\n      linear-gradient(to left, ".concat(color," 1px, transparent 1px)\n    ")}),(0,jsx_runtime.jsxs)("div",{className:className,children:[(0,jsx_runtime.jsxs)("div",{className:"linear-display__label",children:[props.label,props.label?":":""," "]}),(0,jsx_runtime.jsx)("div",{className:"linear-display__bar-container",title:title,children:(0,jsx_runtime.jsx)("div",{className:"linear-display__bar-progress",style:progressStyle,children:(0,jsx_runtime.jsxs)("span",{className:"linear-display__bar-progress-text",children:[props.current,overload?"/"+props.max:""," "]})})}),(0,jsx_runtime.jsx)("div",{children:" "})]})}try{LinearDisplay_LinearDisplay.displayName="LinearDisplay",LinearDisplay_LinearDisplay.__docgenInfo={description:"",displayName:"LinearDisplay",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},current:{defaultValue:null,description:"",name:"current",required:!0,type:{name:"number"}},max:{defaultValue:null,description:"",name:"max",required:!0,type:{name:"number"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/LinearDisplay/LinearDisplay.tsx#LinearDisplay"]={docgenInfo:LinearDisplay_LinearDisplay.__docgenInfo,name:"LinearDisplay",path:"src/components/LinearDisplay/LinearDisplay.tsx#LinearDisplay"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/SlideInPanel/SlideInPanel.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>SlideInPanel_SlideInPanel});var react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function SlideInPanel_SlideInPanel(_ref){let{title,children,className,initiallyOpen}=_ref,[isShownValueForCurrentRender,setIsShownValueForNextRender]=(0,react.useState)(initiallyOpen),baseClassName="slide-in-panel",finalClassName="\n    ".concat(baseClassName," \n    ").concat(baseClassName).concat(isShownValueForCurrentRender?"--shown":"--hidden"," \n    ").concat(className||"","\n  ");return(0,jsx_runtime.jsxs)("div",{className:finalClassName,children:[(0,jsx_runtime.jsx)("div",{className:"slide-in-panel__tab",onClick:()=>{setIsShownValueForNextRender(previousValue=>!previousValue)},title:title,children:title}),(0,jsx_runtime.jsx)("div",{className:"slide-in-panel__content",children:children})]})}var ContainerEdgeSide=function(ContainerEdgeSide){return ContainerEdgeSide.left="left",ContainerEdgeSide.right="right",ContainerEdgeSide.top="top",ContainerEdgeSide.bottom="bottom",ContainerEdgeSide}(ContainerEdgeSide||{});try{SlideInPanel_SlideInPanel.displayName="SlideInPanel",SlideInPanel_SlideInPanel.__docgenInfo={description:"A panel that slides in from the right",displayName:"SlideInPanel",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},initiallyOpen:{defaultValue:null,description:"",name:"initiallyOpen",required:!0,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/SlideInPanel/SlideInPanel.tsx#SlideInPanel"]={docgenInfo:SlideInPanel_SlideInPanel.__docgenInfo,name:"SlideInPanel",path:"src/components/SlideInPanel/SlideInPanel.tsx#SlideInPanel"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$l:()=>Board,bL:()=>Cell_Cell,ZX:()=>Controls_Controls,MD:()=>CursorMessage_CursorMessage,Yx:()=>EmojiMapper_EmojiMapper,m7:()=>EntityCard_EntityCard,PB:()=>EntityPawn_EntityPawn,_4:()=>GradientBolt_GradientBolt,rj:()=>Grid_Grid,$3:()=>HpBar_HpBar,qx:()=>HudPanel_HudPanel,Pg:()=>InventoryList_InventoryList,Og:()=>LinearDisplay.O,_p:()=>MessageBox_MessageBox,wC:()=>ShootingVisualization_ShootingVisualization,x9:()=>SlideInPanel.x,QZ:()=>SquareComponent});var react=__webpack_require__("./node_modules/react/index.js"),Helpers=__webpack_require__("./src/helpers/Helpers.ts");let Board_module={board:"Board_board__09jEj",board__row:"Board_board__row__kf8Ef","board--rotated":"Board_board--rotated__Ey+uy"};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");class Board extends react.Component{constructor(){super(...arguments),this.handleClick=i=>{console.log("Handles Click on Board",i),this.props.onClick(i)},this.EntityPawns=()=>this.props.entities.map(entity=>(0,jsx_runtime.jsx)(EntityPawn_EntityPawn,{entity:entity},entity.name)),this.BoardSquares=()=>{let colId,cellId=0,rowId=0;return Array(this.props.size).fill(null).map((row,number)=>{colId=0;let cells=Array(this.props.size).fill(null).map((cell,number)=>this.renderSquare(cellId++,rowId,colId++));return(0,jsx_runtime.jsx)("div",{className:Board_module.board__row,children:cells},rowId++)})}}renderSquare(i,rowId,colId){let square=this.props.squares[i];return(0,jsx_runtime.jsx)(SquareComponent,{squareId:i,className:Helpers.Mk(square),onClick:this.handleClick,blood:square&&square.blood,items:square&&square.items,itemsNumber:square&&square.items&&square.items.length},"r".concat(rowId,"_c").concat(i))}render(){let className=Board_module.board;return this.props.isRotated&&(className+=" ".concat(Board_module["board--rotated"]," board--rotated")),(0,jsx_runtime.jsxs)("div",{className:className,style:this.props.style,children:[this.BoardSquares(),this.EntityPawns()]})}}try{Board.displayName="Board",Board.__docgenInfo={description:"",displayName:"Board",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!0,type:{name:"(i: number) => void"}},squares:{defaultValue:null,description:"",name:"squares",required:!0,type:{name:"Square[]"}},entities:{defaultValue:null,description:"",name:"entities",required:!0,type:{name:"Entity[]"}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"number"}},isRotated:{defaultValue:null,description:"",name:"isRotated",required:!0,type:{name:"boolean"}},style:{defaultValue:null,description:"",name:"style",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Board/Board.tsx#Board"]={docgenInfo:Board.__docgenInfo,name:"Board",path:"src/components/Board/Board.tsx#Board"})}catch(__react_docgen_typescript_loader_error){}try{EntitiesList.displayName="EntitiesList",EntitiesList.__docgenInfo={description:"",displayName:"EntitiesList",props:{entities:{defaultValue:null,description:"",name:"entities",required:!0,type:{name:"Entity[]"}},onInventoryClick:{defaultValue:null,description:"",name:"onInventoryClick",required:!0,type:{name:"any"}},processInterface:{defaultValue:null,description:"",name:"processInterface",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EntitiesList/EntitiesList.tsx#EntitiesList"]={docgenInfo:EntitiesList.__docgenInfo,name:"EntitiesList",path:"src/components/EntitiesList/EntitiesList.tsx#EntitiesList"})}catch(__react_docgen_typescript_loader_error){}var services=__webpack_require__("./src/services/index.ts");class EntityCard_EntityCard extends react.Component{constructor(props){super(props),this.handleInventoryItemClick=itemName=>{this.props.onInventoryClick(this.props.entity,itemName)},this.handleInventoryButtonClick=()=>{this.setState(prevState=>({isInventoryOpen:!prevState.isInventoryOpen}))},this.onDrop=itemName=>{let{entity}=this.props;entity.equipment.hands&&entity.equipment.hands.name===itemName&&(entity.unEquipFromHands(),entity.isShooting=!1);let item=entity.takeFromInventory(itemName);item instanceof services.ck?(console.log("Dropping Item"),entity.square.addItem(item)):item instanceof services.JH&&(console.log("Dropping Entity"),services.gB.addEntity(item),entity.square.entity=item,entity.square.entities.push(item),item.position={...entity.position}),this.props.processInterface()},this.onReload=weapon=>{let{entity}=this.props;services.gB.reloadWeapon(entity,weapon),this.props.processInterface()},this.state={isInventoryOpen:!1}}get distanceToTarget(){let{entity}=this.props;return entity.targetPosition?Number(Helpers.cL(entity.targetPosition.x-entity.position.x,entity.targetPosition.y-entity.position.y).toFixed(2)):null}render(){var _entity$inventory;let bleedingText,bleedingReductionText;let{entity}=this.props;if(!entity)return null;let className="entity-card";entity.active&&(className+=" entity-card--active"),entity.isFriendly&&(className+=" entity-card--friendly"),entity.isDead&&(className+=" entity-card--dead");let inHands=entity.equipment&&entity.equipment.hands;return entity.bleedingReductionPerTurn&&(bleedingReductionText=(0,jsx_runtime.jsxs)("span",{className:"bleeding-info__reduction",children:["(-",entity.bleedingReductionPerTurn,(0,jsx_runtime.jsx)("small",{className:"bleeding-info__reduction__unit",children:"/Turn"}),")"]})),entity.bleeding&&(bleedingText=(0,jsx_runtime.jsxs)("span",{className:"bleeding-info",children:["Bleeding: ",entity.bleeding," ",bleedingReductionText]})),(0,jsx_runtime.jsxs)("div",{className:className,children:[(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)("div",{className:"entity-card__portrait",children:(0,jsx_runtime.jsx)(EmojiMapper_EmojiMapper,{emoji:entity.icon})})}),(0,jsx_runtime.jsxs)("strong",{title:"Name",children:[entity.isDead&&"Dead ",entity.name]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("small",{className:"entity-data__rank",children:"Private"}),(0,jsx_runtime.jsxs)("div",{className:"entity-data__status-displays",children:[(0,jsx_runtime.jsx)(LinearDisplay.O,{className:"full",label:"AP",current:entity.actionPoints,max:entity.maxActionPoints}),(0,jsx_runtime.jsx)(LinearDisplay.O,{className:"full",label:"HP",current:entity.hp,max:entity.maxHp}),bleedingText]}),(0,jsx_runtime.jsx)("div",{className:"equipment-panel",children:(0,jsx_runtime.jsx)(InventoryList_InventoryList,{label:"",title:"In hands",interactButtonText:"Unequip →",onInteract:this.state.isInventoryOpen&&this.handleInventoryItemClick,onReload:this.props.entity.isAlive&&this.onReload,onDrop:this.props.entity.isDead&&this.onDrop,inventory:inHands&&[inHands],shorterDisplay:this.props.shorterDisplay,processInterface:()=>this.props.processInterface()})}),this.state.isInventoryOpen&&(0,jsx_runtime.jsx)("div",{className:"inventory-panel",children:(0,jsx_runtime.jsx)(InventoryList_InventoryList,{label:"Inventory",title:"In backpack",interactButtonText:" ← Equip",onInteract:this.handleInventoryItemClick,onDrop:this.onDrop,inventory:entity.inventory,processInterface:()=>this.props.processInterface()})}),(0,jsx_runtime.jsxs)("button",{className:"inventory-list__drop-button inventory-button",onClick:()=>this.handleInventoryButtonClick(),children:["INVENTORY (",(null===(_entity$inventory=entity.inventory)||void 0===_entity$inventory?void 0:_entity$inventory.length)||0,")"]}),entity.isDead&&(0,jsx_runtime.jsx)("button",{className:"inventory-list__drop-button pick-up-button",onClick:()=>this.props.onEntityClick(entity.name),children:"Pick up the body"})]})}}try{EntityCard_EntityCard.displayName="EntityCard",EntityCard_EntityCard.__docgenInfo={description:"",displayName:"EntityCard",props:{entity:{defaultValue:null,description:"",name:"entity",required:!0,type:{name:"Entity"}},shorterDisplay:{defaultValue:null,description:"",name:"shorterDisplay",required:!1,type:{name:"boolean"}},onInventoryClick:{defaultValue:null,description:"",name:"onInventoryClick",required:!1,type:{name:"(entity: Entity, itemName: string) => any"}},onEntityClick:{defaultValue:null,description:"",name:"onEntityClick",required:!1,type:{name:"(entityName: string) => any"}},processInterface:{defaultValue:null,description:"",name:"processInterface",required:!1,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EntityCard/EntityCard.tsx#EntityCard"]={docgenInfo:EntityCard_EntityCard.__docgenInfo,name:"EntityCard",path:"src/components/EntityCard/EntityCard.tsx#EntityCard"})}catch(__react_docgen_typescript_loader_error){}class EntityPawn_EntityPawn extends react.Component{constructor(){super(...arguments),this.randomTime="".concat((Math.random()+.5).toFixed(2),"s")}render(){var _entity$equipment,_entity$equipment$han;let{entity}=this.props,square=services.fi.getSquareFromPosition(entity.position.x,entity.position.y),classNameBase="entity-pawn__icon",className="".concat(classNameBase),classessFromFlags=Helpers.l$(entity,classNameBase);classessFromFlags+=Helpers.l$(square,classNameBase),className+=" ".concat(classessFromFlags," ");let fof=entity.isFriendly?"friendly":"hostile",color=entity.isFriendly?"green":"red",zIndex=entity.isShooting?5:1,animationBreathing=entity.isBreathing?"breathing ".concat(this.randomTime," alternate infinite linear"):"none",customPropsObject={weaponType:null===(_entity$equipment=entity.equipment)||void 0===_entity$equipment?void 0:null===(_entity$equipment$han=_entity$equipment.hands)||void 0===_entity$equipment$han?void 0:_entity$equipment$han.type,actionId:entity.attackNumber};return(0,jsx_runtime.jsxs)("div",{className:"entity-pawn ".concat(entity.isDead?"entity-pawn--dead":""),style:{left:"calc(".concat(13,"px + ").concat(4*entity.position.x,"px + ").concat(entity.position.x,"em)"),top:"calc(".concat(13,"px + ").concat(4*entity.position.y,"px + ").concat(entity.position.y,"em)"),zIndex:zIndex},children:[(0,jsx_runtime.jsx)("div",{className:"entity-pawn__health-display "+fof,children:(0,jsx_runtime.jsx)(HpBar_HpBar,{current:entity.hp,max:entity.maxHp,color:color})}),(0,jsx_runtime.jsx)("div",{className:className,style:{animation:animationBreathing},children:(0,jsx_runtime.jsx)(EmojiMapper_EmojiMapper,{emoji:entity.icon})}),entity.isShooting&&(0,jsx_runtime.jsx)(ShootingVisualization_ShootingVisualization,{...entity,...customPropsObject})]},entity.name)}}try{EntityPawn_EntityPawn.displayName="EntityPawn",EntityPawn_EntityPawn.__docgenInfo={description:"",displayName:"EntityPawn",props:{entity:{defaultValue:null,description:"",name:"entity",required:!0,type:{name:"Entity"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EntityPawn/EntityPawn.tsx#EntityPawn"]={docgenInfo:EntityPawn_EntityPawn.__docgenInfo,name:"EntityPawn",path:"src/components/EntityPawn/EntityPawn.tsx#EntityPawn"})}catch(__react_docgen_typescript_loader_error){}class EmojiMapper_EmojiMapper extends react.Component{constructor(){super(...arguments),this.emojiMap={"🐙":"octopus","🦑":"squid","🕷️":"spider","🦟":"mosquito","🐜":"ant","🦠":"microbe","🧑‍🚀":"astronaut","🤖":"robot","🛢️":"oildrum"}}render(){let{emoji}=this.props,emojiMappedTo=this.emojiMap[emoji],output=(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{});return output=emojiMappedTo?(0,jsx_runtime.jsx)("div",{className:"emoji emoji-"+emojiMappedTo}):(0,jsx_runtime.jsxs)("div",{children:[emoji,"."]}),(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:output})}}try{EmojiMapper_EmojiMapper.displayName="EmojiMapper",EmojiMapper_EmojiMapper.__docgenInfo={description:"",displayName:"EmojiMapper",props:{emoji:{defaultValue:null,description:"",name:"emoji",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EmojiMapper/EmojiMapper.tsx#EmojiMapper"]={docgenInfo:EmojiMapper_EmojiMapper.__docgenInfo,name:"EmojiMapper",path:"src/components/EmojiMapper/EmojiMapper.tsx#EmojiMapper"})}catch(__react_docgen_typescript_loader_error){}var resources=__webpack_require__("./src/resources/index.ts");class TargetedSquareInfo extends react.Component{constructor(props){super(props),this.boxSerialNumber=0,this.handleInventoryButtonClick=()=>{this.setState(prevState=>({isInventoryOpen:!prevState.isInventoryOpen}))},this.onItemClick=itemName=>{let{selected,targeted,squareNumber}=this.props,targetedSquarePosition=services.fi.getSquarePositionFromIndex(squareNumber);if(selected&&targeted&&selected.position.x===targetedSquarePosition.x&&selected.position.y===targetedSquarePosition.y){let item=targeted.takeFromInventory(itemName);if(!item){item=targeted.entities.find(entity=>entity.name===itemName);let square=services.fi.getSquareFromPosition(targetedSquarePosition.x,targetedSquarePosition.y);services.gB.removeEntityFromListOfEntities(square.entities,item),services.gB.removeEntity(item)}selected.addToInventory(item),selected.equipment.hands||selected.equipInHands(item.name)}else services.ez.send("".concat(selected.name," can't pickup ").concat(itemName,". They need to be on the same square to do that."));this.props.processInterface()},this.state={isInventoryOpen:!1}}componentDidUpdate(prevProps){prevProps.squareNumber!==this.props.squareNumber&&this.setState({isInventoryOpen:!1})}onMoveClick(selected,targetedSquarePosition){let targetedSquare=services.fi.getSquareFromPosition(targetedSquarePosition.x,targetedSquarePosition.y);selected.setMoveDestinationPosition(targetedSquarePosition),targetedSquare.isChosenDestination=!0,this.props.processInterface()}onAttackClick(selected,targetedSquarePosition){selected.attackPosition(targetedSquarePosition),this.props.processInterface()}onAddStructureClick(targetedSquarePosition,structureType){let box=Object.assign({},resources.Qp[structureType]),targetPosition=Object.assign({},targetedSquarePosition);box.position=targetPosition,box.name+=this.boxSerialNumber++;let square=services.fi.getSquareFromPosition(targetedSquarePosition.x,targetedSquarePosition.y),newStructure=new services.JH(box);square.entities.push(newStructure),services.gB.entities.push(newStructure),this.props.processInterface()}render(){let items;let{targeted,selected,squareNumber}=this.props;if(!targeted)return null;let targetedSquarePosition=services.fi.getSquarePositionFromIndex(squareNumber),entityInfo=[],availableActions=[];if(targeted.entities&&targeted.entities.length&&targeted.entities.forEach(i=>{selected!==i&&entityInfo.push((0,jsx_runtime.jsx)(EntityCard_EntityCard,{onEntityClick:this.onItemClick,onInventoryClick:this.props.onInventoryClick,entity:i,shorterDisplay:!0,processInterface:()=>this.props.processInterface()},i.name))}),targeted.items&&targeted.items.length&&(items=(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[this.state.isInventoryOpen&&(0,jsx_runtime.jsx)("div",{className:"inventory-panel",children:(0,jsx_runtime.jsx)(InventoryList_InventoryList,{label:"Items on the floor",title:"On the floor",interactButtonText:"↖ Pick up",onInteract:this.onItemClick,onDrop:null,onReload:null,inventory:targeted.items,processInterface:()=>this.props.processInterface()})}),(0,jsx_runtime.jsxs)("button",{className:"inventory-list__drop-button inventory-button",onClick:()=>this.handleInventoryButtonClick(),children:["Show items on the floor (",targeted.items.length,")"]})]})),selected){let distanceToSelected=Helpers.cL(targetedSquarePosition.x-selected.position.x,targetedSquarePosition.y-selected.position.y);distanceToSelected.toFixed(2),0!==distanceToSelected&&(targeted.isAvailableDestination&&(availableActions[0]=(0,jsx_runtime.jsx)("button",{onClick:()=>this.onMoveClick(selected,targetedSquarePosition),className:"button",children:"Move"},"move")),targeted.entity&&(availableActions[1]=(0,jsx_runtime.jsx)("button",{onClick:()=>this.onAttackClick(selected,targetedSquarePosition),className:"button",children:"Attack"},"attack")))}targetedSquarePosition&&(targetedSquarePosition.x,targetedSquarePosition.y),targeted.blood&&targeted.blood;let square=services.fi.getSquareFromPosition(targetedSquarePosition.x,targetedSquarePosition.y);return(0,jsx_runtime.jsxs)("div",{className:this.props.className,children:[(0,jsx_runtime.jsx)("strong",{className:"targeted__label",children:"Target square Info"}),(0,jsx_runtime.jsxs)("code",{children:[square.icon," ",square.name]}),square.description&&(0,jsx_runtime.jsx)("p",{className:"square-description",children:square.description}),(0,jsx_runtime.jsx)("div",{children:entityInfo}),(0,jsx_runtime.jsx)("div",{children:availableActions}),items]})}}try{TargetedSquareInfo.displayName="TargetedSquareInfo",TargetedSquareInfo.__docgenInfo={description:"",displayName:"TargetedSquareInfo",props:{className:{defaultValue:null,description:"",name:"className",required:!0,type:{name:"string"}},squareNumber:{defaultValue:null,description:"",name:"squareNumber",required:!0,type:{name:"number"}},squares:{defaultValue:null,description:"",name:"squares",required:!0,type:{name:"Square[]"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"Entity"}},targeted:{defaultValue:null,description:"",name:"targeted",required:!0,type:{name:"Square"}},onInventoryClick:{defaultValue:null,description:"",name:"onInventoryClick",required:!0,type:{name:"(entity: Entity, itemName: string) => void"}},processInterface:{defaultValue:null,description:"",name:"processInterface",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Game/TargetedSquareInfo.tsx#TargetedSquareInfo"]={docgenInfo:TargetedSquareInfo.__docgenInfo,name:"TargetedSquareInfo",path:"src/components/Game/TargetedSquareInfo.tsx#TargetedSquareInfo"})}catch(__react_docgen_typescript_loader_error){}class SelectedEntityInfo extends react.Component{render(){return this.props.selected?(0,jsx_runtime.jsxs)("div",{className:"selected",children:[(0,jsx_runtime.jsx)("strong",{className:"selected__label",children:"Active entity "}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(EntityCard_EntityCard,{onInventoryClick:this.props.onInventoryClick,entity:this.props.selected,processInterface:()=>this.props.processInterface()})}),(0,jsx_runtime.jsxs)("button",{onClick:this.props.handleDeselectAllEntities,className:"button",children:[" ","Deselect"]})]}):null}}try{SelectedEntityInfo.displayName="SelectedEntityInfo",SelectedEntityInfo.__docgenInfo={description:"",displayName:"SelectedEntityInfo",props:{selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"Entity"}},onInventoryClick:{defaultValue:null,description:"",name:"onInventoryClick",required:!0,type:{name:"(entity: Entity, itemName: string) => void"}},handleDeselectAllEntities:{defaultValue:null,description:"",name:"handleDeselectAllEntities",required:!0,type:{name:"() => void"}},processInterface:{defaultValue:null,description:"",name:"processInterface",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Game/SelectedEntityInfo.tsx#SelectedEntityInfo"]={docgenInfo:SelectedEntityInfo.__docgenInfo,name:"SelectedEntityInfo",path:"src/components/Game/SelectedEntityInfo.tsx#SelectedEntityInfo"})}catch(__react_docgen_typescript_loader_error){}let GameActions=null;class Game_Game extends react.PureComponent{constructor(props){super(props),this.renderCounter=0,this.turnNumber=0,services.i4.loadBuiltInMap(),services.i4.loadPredefinedEntitities(),services.gB.setSelected(services.gB.findEntityById("Lazer Blady")),this.state=new services.D2,GameActions=new services.NR(this),console.log("Initial state dump:",this.state)}componentDidMount(){this.startIfAutoLoopIsOn(),services.ez.send("Mission loaded"),GameActions.processInterface(),GameActions.startUpdatingClickPositionCssVariables()}startIfAutoLoopIsOn(){this.state.isAutoLoopOn&&GameActions.loop()}calculateFriendlyActionPoints(){return services.gB.entities.filter(entity=>entity.isFriendly).reduce((previousValue,entity)=>previousValue+entity.actionPoints,0)}render(){return(0,jsx_runtime.jsxs)("div",{className:"game game-hud",children:[(0,jsx_runtime.jsx)(CursorMessage_CursorMessage,{messageText:services.ez.cursorMessage,messageTimeInMs:1500},services.ez.cursorMessageNumber),(0,jsx_runtime.jsxs)("section",{className:"section-details",children:[(0,jsx_runtime.jsx)(SelectedEntityInfo,{selected:this.state.selected,handleDeselectAllEntities:GameActions.handleDeselectAllEntities,onInventoryClick:GameActions.onInventoryClick,processInterface:()=>GameActions.processInterface()}),(0,jsx_runtime.jsx)(TargetedSquareInfo,{className:"targeted",squareNumber:this.state.targetedSquareNumber,squares:this.state.squares,selected:this.state.selected,targeted:this.state.targeted,onInventoryClick:GameActions.onInventoryClick,processInterface:()=>GameActions.processInterface()})]}),(0,jsx_runtime.jsxs)("main",{className:"section-main",children:[(0,jsx_runtime.jsx)("div",{className:"game__board",children:(0,jsx_runtime.jsx)(Board,{squares:this.state.squares,entities:this.state.entities,onClick:i=>GameActions.handleClickV2(i),size:this.state.arenaSize,isRotated:this.state.isBoardRotated,style:{fontSize:"".concat(this.state.squareSize,"px")}})}),(0,jsx_runtime.jsxs)("section",{className:"section-status",children:[(0,jsx_runtime.jsx)(MessageBox_MessageBox,{}),(0,jsx_runtime.jsx)(HudPanel_HudPanel,{title:"=>",children:(0,jsx_runtime.jsx)("button",{onClick:GameActions.endTurn,className:"button next_tick next_turn",children:"End Turn"})})]})]}),(0,jsx_runtime.jsx)(SlideInPanel.x,{title:"Actions",initiallyOpen:!0,children:(0,jsx_runtime.jsx)("div",{className:"game__info",children:(0,jsx_runtime.jsxs)("div",{className:"actions",children:[(0,jsx_runtime.jsx)("button",{onClick:GameActions.toggleEditorMode,children:"Editor Mode"}),(0,jsx_runtime.jsx)("button",{onClick:services.i4.saveMap,children:"Save Map"}),(0,jsx_runtime.jsx)("button",{onClick:()=>services.i4.loadMap(GameActions),children:"Load Map"}),(0,jsx_runtime.jsx)("button",{onClick:()=>services.i4.generateMAP(),children:"Generate MAP"}),(0,jsx_runtime.jsx)("button",{onClick:GameActions.toggleRotateBoard,children:"Rotate Board"}),(0,jsx_runtime.jsx)("button",{onClick:GameActions.zoomIn,children:"Zoom In (+)"}),(0,jsx_runtime.jsx)("button",{onClick:GameActions.zoomOut,children:"Zoom Out (-)"}),(0,jsx_runtime.jsx)("button",{onClick:()=>GameActions.nuke(40),className:"button-nuke",children:"Nuke All"}),(0,jsx_runtime.jsx)("button",{onClick:GameActions.ceaseFire,children:"Cease Fire"}),(0,jsx_runtime.jsx)("button",{onClick:GameActions.executeActions,className:"execute_actions",children:"Execute Actions"}),(0,jsx_runtime.jsxs)("span",{className:"st ep-counter",children:["Turn: ",this.turnNumber]}),(0,jsx_runtime.jsxs)("label",{className:"button auto-cycle",children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",checked:this.state.isAutoLoopOn,onChange:GameActions.switchAutoLoop}),(0,jsx_runtime.jsx)("span",{children:"Auto Cycle"})]}),(0,jsx_runtime.jsx)("button",{onClick:GameActions.endTurn,className:"button next_tick next_turn",children:"End Turn"})]})})})]})}}try{Game_Game.displayName="Game",Game_Game.__docgenInfo={description:"Game composes all the parts of the interface together",displayName:"Game",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Game/Game.tsx#Game"]={docgenInfo:Game_Game.__docgenInfo,name:"Game",path:"src/components/Game/Game.tsx#Game"})}catch(__react_docgen_typescript_loader_error){}class Blood extends react.PureComponent{render(){let{bloodAmount}=this.props;if(bloodAmount<=0){console.error("Blood amount zero or negative.");return}let bloodDrops=[],i=bloodAmount;for(;i--;)bloodDrops.push((0,jsx_runtime.jsx)("span",{className:"blood__drop",style:{position:"absolute",fontSize:"".concat(1+3*Math.random(),"em"),left:"calc(".concat(0+100*Math.random(),"% - 0.4em)"),top:"calc(".concat(0+100*Math.random(),"% - 0.5em)")},children:"o"},i));return(0,jsx_runtime.jsxs)("div",{className:"square__blood",style:{background:"rgba(255, 0, 0, 0)"},children:[bloodDrops,(0,jsx_runtime.jsx)("span",{className:"blood__text",children:bloodAmount})]})}}try{Blood.displayName="Blood",Blood.__docgenInfo={description:"",displayName:"Blood",props:{bloodAmount:{defaultValue:null,description:"",name:"bloodAmount",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Square/Blood.tsx#Blood"]={docgenInfo:Blood.__docgenInfo,name:"Blood",path:"src/components/Square/Blood.tsx#Blood"})}catch(__react_docgen_typescript_loader_error){}class Items extends react.PureComponent{constructor(){super(...arguments),this.itemsIcons=[]}render(){let{items,itemsNumber}=this.props;return items?(items.forEach(item=>{item.icon&&this.itemsIcons.push((0,jsx_runtime.jsx)("div",{className:"square__item-icon",children:item.icon}))}),(0,jsx_runtime.jsxs)("div",{className:"square__items",children:[(0,jsx_runtime.jsx)("div",{className:"square__items-icons",children:this.itemsIcons}),(0,jsx_runtime.jsx)("div",{className:"square__items-number",children:itemsNumber||""})]})):null}}try{Items.displayName="Items",Items.__docgenInfo={description:"",displayName:"Items",props:{items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"Item[]"}},itemsNumber:{defaultValue:null,description:"",name:"itemsNumber",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Square/Items.tsx#Items"]={docgenInfo:Items.__docgenInfo,name:"Items",path:"src/components/Square/Items.tsx#Items"})}catch(__react_docgen_typescript_loader_error){}class SquareComponent extends react.PureComponent{constructor(){super(...arguments),this.onClick=()=>{this.props.onClick(this.props.squareId)}}render(){function cuboid(classPrefix){let i=6,cuboidFaces=[];for(;i--;)cuboidFaces.push((0,jsx_runtime.jsx)("div",{className:"".concat(classPrefix,"__cuboid-face")},i));return(0,jsx_runtime.jsx)("div",{className:"".concat(classPrefix,"__cuboid"),children:cuboidFaces})}let squareModel=services.fi.squares[this.props.squareId],icon=null==squareModel?void 0:squareModel.icon;return(0,jsx_runtime.jsxs)("button",{className:"square "+this.props.className,onClick:this.onClick,children:[(0,jsx_runtime.jsx)("div",{className:"square__content",children:icon}),(0,jsx_runtime.jsx)(Blood,{bloodAmount:this.props.blood}),(0,jsx_runtime.jsx)(Items,{items:this.props.items,itemsNumber:this.props.itemsNumber}),cuboid("square")]})}}try{SquareComponent.displayName="SquareComponent",SquareComponent.__docgenInfo={description:"Displays a single square with blood and items on it.",displayName:"SquareComponent",props:{squareId:{defaultValue:null,description:"Unique square id",name:"squareId",required:!0,type:{name:"number"}},className:{defaultValue:null,description:"Optional CSS class name",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Handler for this square click",name:"onClick",required:!0,type:{name:"(squareIndex: number) => void"}},blood:{defaultValue:null,description:"The amount of blood on this square",name:"blood",required:!0,type:{name:"number"}},items:{defaultValue:null,description:"A list of items on this square",name:"items",required:!0,type:{name:"Item[]"}},itemsNumber:{defaultValue:null,description:"A number of items on this square.\nHere to trigger an update when list length changes.",name:"itemsNumber",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Square/Square.tsx#SquareComponent"]={docgenInfo:SquareComponent.__docgenInfo,name:"SquareComponent",path:"src/components/Square/Square.tsx#SquareComponent"})}catch(__react_docgen_typescript_loader_error){}var LinearDisplay=__webpack_require__("./src/components/LinearDisplay/LinearDisplay.tsx");class HudPanel_HudPanel extends react.Component{render(){return(0,jsx_runtime.jsxs)("div",{className:"hud-panel",children:[(0,jsx_runtime.jsx)("div",{className:"hud-panel__title",children:this.props.title}),(0,jsx_runtime.jsx)("div",{className:"hud-panel__content",children:this.props.children})]})}}try{HudPanel_HudPanel.displayName="HudPanel",HudPanel_HudPanel.__docgenInfo={description:"",displayName:"HudPanel",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/HudPanel/HudPanel.tsx#HudPanel"]={docgenInfo:HudPanel_HudPanel.__docgenInfo,name:"HudPanel",path:"src/components/HudPanel/HudPanel.tsx#HudPanel"})}catch(__react_docgen_typescript_loader_error){}class Cell_Cell extends react.PureComponent{constructor(){super(...arguments),this.state={}}render(){var _this$props,_this$props2;return(0,jsx_runtime.jsx)("div",{className:"cell",style:null===(_this$props=this.props)||void 0===_this$props?void 0:_this$props.style,children:(0,jsx_runtime.jsx)("div",{className:"cell__contents",children:null===(_this$props2=this.props)||void 0===_this$props2?void 0:_this$props2.children})})}}try{Cell_Cell.displayName="Cell",Cell_Cell.__docgenInfo={description:'Renders children in a container with a "cell" CSS class',displayName:"Cell",props:{style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Grid/Cell.tsx#Cell"]={docgenInfo:Cell_Cell.__docgenInfo,name:"Cell",path:"src/components/Grid/Cell.tsx#Cell"})}catch(__react_docgen_typescript_loader_error){}class Grid_Grid extends react.Component{renderGrid(){let{cellSize,gapSize,width,height,startAt,cellBorderColor}=this.props,rows=[],gapStyle=gapSize>-1?{gridGap:"".concat(gapSize,"px ").concat(gapSize,"px")}:{},rowStyle={gridTemplateColumns:"repeat(".concat(width+1,", 1em)"),...gapStyle},gridStyle={gridTemplateRows:"repeat(".concat(height+1,", 1em)"),...gapStyle,...cellSize>-1?{fontSize:"".concat(cellSize,"px")}:{}},borderStyle=cellBorderColor?{border:"1px solid ".concat(cellBorderColor)}:{};for(let y=0;y<=height;y++){let sourceY=startAt[1]+y,currentRow=[];for(let x=0;x<=width;x++){let sourceX=startAt[0]+x,currentCell=(0,jsx_runtime.jsxs)(Cell_Cell,{style:borderStyle,children:[sourceX,", ",sourceY]},"$key_".concat(sourceX,"_").concat(sourceY));currentRow.push(currentCell)}rows.push((0,jsx_runtime.jsx)("div",{className:"row",style:rowStyle,children:currentRow},"$key_X_".concat(sourceY)))}return(0,jsx_runtime.jsx)("div",{className:"grid",style:gridStyle,children:rows})}render(){return this.renderGrid()}}try{Grid_Grid.displayName="Grid",Grid_Grid.__docgenInfo={description:"Renders a grid X by Y, starting from a given position",displayName:"Grid",props:{cellSize:{defaultValue:null,description:"size of the grid square in pixels",name:"cellSize",required:!1,type:{name:"number"}},gapSize:{defaultValue:null,description:"size of the grid gap between squares in pixels",name:"gapSize",required:!1,type:{name:"number"}},width:{defaultValue:null,description:"width of the grid in number of squares",name:"width",required:!0,type:{name:"number"}},height:{defaultValue:null,description:"height of the grid in number of squares",name:"height",required:!0,type:{name:"number"}},startAt:{defaultValue:null,description:"params given to the first square (top left one)",name:"startAt",required:!0,type:{name:"[number, number]"}},cellBorderColor:{defaultValue:null,description:"color for the cell border",name:"cellBorderColor",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Grid/Grid.tsx#Grid"]={docgenInfo:Grid_Grid.__docgenInfo,name:"Grid",path:"src/components/Grid/Grid.tsx#Grid"})}catch(__react_docgen_typescript_loader_error){}class Controls_Controls extends react.Component{constructor(props){super(props),this.state={w:!1,s:!1,a:!1,d:!1,space:!1}}componentDidMount(){document.addEventListener("keydown",e=>this.onKeyDown(e),!1),document.addEventListener("keyup",e=>this.onKeyUp(e),!1)}onKeyDown(event){switch(event.keyCode){case 87:this.setState({w:!0}),this.props.onKeyPress("w");break;case 83:this.setState({s:!0}),this.props.onKeyPress("s");break;case 65:this.setState({a:!0}),this.props.onKeyPress("a");break;case 68:this.setState({d:!0}),this.props.onKeyPress("d");break;case 32:this.setState({space:!0}),this.props.onKeyPress("space")}}onKeyUp(event){switch(event.keyCode){case 87:this.setState({w:!1});break;case 83:this.setState({s:!1});break;case 65:this.setState({a:!1});break;case 68:this.setState({d:!1});break;case 32:this.setState({space:!1})}}render(){return(0,jsx_runtime.jsxs)("div",{className:"controls",children:["[",(0,jsx_runtime.jsx)("span",{className:"".concat(this.state.w?"pressed":""," key"),children:"W"}),"] [",(0,jsx_runtime.jsx)("span",{className:"".concat(this.state.s?"pressed":""," key"),children:"S"}),"] [",(0,jsx_runtime.jsx)("span",{className:"".concat(this.state.a?"pressed":""," key"),children:"A"}),"] [",(0,jsx_runtime.jsx)("span",{className:"".concat(this.state.d?"pressed":""," key"),children:"D"}),"]   [",(0,jsx_runtime.jsx)("span",{className:"".concat(this.state.space?"pressed":""," key"),children:"space"}),"]"]})}}try{Controls_Controls.displayName="Controls",Controls_Controls.__docgenInfo={description:"",displayName:"Controls",props:{keys:{defaultValue:null,description:"",name:"keys",required:!0,type:{name:"string[]"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!0,type:{name:"(key: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Controls/Controls.tsx#Controls"]={docgenInfo:Controls_Controls.__docgenInfo,name:"Controls",path:"src/components/Controls/Controls.tsx#Controls"})}catch(__react_docgen_typescript_loader_error){}class MessageBox_MessageBox extends react.Component{constructor(){super(...arguments),this.messages=services.ez.messages,this.messageNumber=void 0,this.renderMessage=(messageRecord,number)=>{let messageNumber="000".concat(number).slice(-3);return(0,jsx_runtime.jsxs)("li",{children:[(0,jsx_runtime.jsx)("span",{className:"message-number",children:messageNumber+" "}),(0,jsx_runtime.jsx)("span",{className:"message-timestamp",children:messageRecord.timestamp+" "}),(0,jsx_runtime.jsx)("span",{className:"message-text",children:messageRecord.message})]},"msg".concat(number))}}shouldComponentUpdate(){return this.messages.length!==this.messageNumber}render(){if(!this.messages.length)return null;let RenderedMessages=this.messages.map((message,number)=>this.renderMessage(message,number));return this.messageNumber=this.messages.length,(0,jsx_runtime.jsx)("ul",{className:"messages",id:"messages",children:RenderedMessages})}scrollElement(){window.requestAnimationFrame(()=>{let element=document.getElementById("messages");element.scrollTop=element.scrollHeight})}componentDidUpdate(){this.messages.length&&this.scrollElement()}}try{MessageBox_MessageBox.displayName="MessageBox",MessageBox_MessageBox.__docgenInfo={description:"",displayName:"MessageBox",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MessageBox/MessageBox.tsx#MessageBox"]={docgenInfo:MessageBox_MessageBox.__docgenInfo,name:"MessageBox",path:"src/components/MessageBox/MessageBox.tsx#MessageBox"})}catch(__react_docgen_typescript_loader_error){}function InventoryItem(props){let reloadButton,dropButton,equipButton,ammoCounter;let{item}=props;if(props.onDrop&&(dropButton=(0,jsx_runtime.jsx)("button",{className:"inventory-list__drop-button",onClick:()=>{props.onDrop(item.name)},children:"Drop ↘"})),props.onInteract&&(equipButton=(0,jsx_runtime.jsx)("button",{className:"inventory-list__equip-button",onClick:()=>props.onInteract(item.name),children:props.interactButtonText})),item instanceof services.mq){if(item.reload&&props.onReload){let className=" inventory-list__reload-button ";0===item.rounds||"empty"===item.rounds?className+=" inventory-list__reload-button--empty ":item.rounds<item.maxRounds&&(className+=" inventory-list__reload-button--partial "),reloadButton=(0,jsx_runtime.jsxs)("button",{className:className,onClick:()=>{props.onReload&&props.onReload(item),props.processInterface()},children:["Reload (",item.reloadCostInAP,"AP)"]})}else reloadButton=null;ammoCounter=item.reload&&props.shorterDisplay?" (".concat(item.rounds,")"):(0,jsx_runtime.jsx)(LinearDisplay.O,{className:"full",label:"Rounds",current:item.rounds,max:item.maxRounds})}return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{className:"inventory-list__item",children:[(0,jsx_runtime.jsx)("span",{children:item.name}),ammoCounter]},item.name),reloadButton,dropButton,equipButton]},item.name)}try{InventoryItem.displayName="InventoryItem",InventoryItem.__docgenInfo={description:"",displayName:"InventoryItem",props:{item:{defaultValue:null,description:"",name:"item",required:!0,type:{name:"Item"}},interactButtonText:{defaultValue:null,description:"",name:"interactButtonText",required:!0,type:{name:"string"}},shorterDisplay:{defaultValue:null,description:"",name:"shorterDisplay",required:!1,type:{name:"boolean"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"(itemName: string) => any"}},onReload:{defaultValue:null,description:"",name:"onReload",required:!1,type:{name:"(weapon: RangedWeapon) => any"}},onInteract:{defaultValue:null,description:"",name:"onInteract",required:!1,type:{name:"(itemName: string) => any"}},processInterface:{defaultValue:null,description:"",name:"processInterface",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/InventoryItem/InventoryItem.tsx#InventoryItem"]={docgenInfo:InventoryItem.__docgenInfo,name:"InventoryItem",path:"src/components/InventoryItem/InventoryItem.tsx#InventoryItem"})}catch(__react_docgen_typescript_loader_error){}function InventoryList_InventoryList(props){var _props$inventory,_props$inventory2;let baseClassName="inventory-list",[isExpanded,setIsExpanded]=(0,react.useState)(!0),finalClassName="\n    ".concat(baseClassName," ").concat(baseClassName).concat(isExpanded?"--expanded":"--collapsed"," ").concat(props.className||"","\n  "),inventoryItems=null===(_props$inventory=props.inventory)||void 0===_props$inventory?void 0:_props$inventory.map(item=>(0,jsx_runtime.jsx)(InventoryItem,{item:item,interactButtonText:props.interactButtonText,shorterDisplay:props.shorterDisplay,onInteract:props.onInteract,onDrop:props.onDrop,onReload:props.onReload,processInterface:props.processInterface},"i".concat(item.name)));return(0,jsx_runtime.jsxs)("div",{className:finalClassName,children:[props.label&&(0,jsx_runtime.jsx)("div",{className:"inventory-list__label",children:props.label}),(0,jsx_runtime.jsxs)("div",{className:"inventory-list__items",title:props.title,children:[inventoryItems,(null===(_props$inventory2=props.inventory)||void 0===_props$inventory2?void 0:_props$inventory2.length)>0?null:props.label&&(0,jsx_runtime.jsx)("span",{className:"is-empty",children:"is empty"})]})]})}try{InventoryList_InventoryList.displayName="InventoryList",InventoryList_InventoryList.__docgenInfo={description:"",displayName:"InventoryList",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},interactButtonText:{defaultValue:null,description:"",name:"interactButtonText",required:!0,type:{name:"string"}},onInteract:{defaultValue:null,description:"",name:"onInteract",required:!1,type:{name:"(itemName: string) => any"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"(itemName: string) => any"}},onReload:{defaultValue:null,description:"",name:"onReload",required:!1,type:{name:"(weapon: RangedWeapon) => any"}},inventory:{defaultValue:null,description:"",name:"inventory",required:!1,type:{name:"Item[]"}},shorterDisplay:{defaultValue:null,description:"",name:"shorterDisplay",required:!1,type:{name:"boolean"}},processInterface:{defaultValue:null,description:"",name:"processInterface",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/InventoryList/InventoryList.tsx#InventoryList"]={docgenInfo:InventoryList_InventoryList.__docgenInfo,name:"InventoryList",path:"src/components/InventoryList/InventoryList.tsx#InventoryList"})}catch(__react_docgen_typescript_loader_error){}class HpBar_HpBar extends react.Component{render(){if(this.props.current<=0)return null;let percentage=~~(100*this.props.current/this.props.max),progressStyle={width:"".concat(percentage,"%"),backgroundColor:this.props.color};return(0,jsx_runtime.jsxs)("div",{className:"hpbar",children:[(0,jsx_runtime.jsx)("div",{className:"hpbar__indicator",style:progressStyle}),(0,jsx_runtime.jsx)("span",{className:"hpbar__text",children:this.props.current})]})}}try{HpBar_HpBar.displayName="HpBar",HpBar_HpBar.__docgenInfo={description:"",displayName:"HpBar",props:{current:{defaultValue:null,description:"",name:"current",required:!0,type:{name:"number"}},max:{defaultValue:null,description:"",name:"max",required:!0,type:{name:"number"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/HpBar/HpBar.tsx#HpBar"]={docgenInfo:HpBar_HpBar.__docgenInfo,name:"HpBar",path:"src/components/HpBar/HpBar.tsx#HpBar"})}catch(__react_docgen_typescript_loader_error){}function ShootingVisualization_ShootingVisualization(_ref){let{targetPosition,position,weaponType,actionId,runningTimeInMs=1e3,numberOfProjectiles=10,varianceBase=7}=_ref,calcNewAangle=Helpers.QN,projectileNumber=numberOfProjectiles,projectiles=[],localId="Entity-x".concat(position.x,"-y").concat(position.y,"-tx").concat(targetPosition.x,"-ty").concat(targetPosition.y,"-aid").concat(actionId),uniqueShootingAnimationId="shooting-animation-".concat(localId),customStyle="",commonStyles="",runningTime=null!=runningTimeInMs?runningTimeInMs:1e3;if(targetPosition&&position&&(targetPosition.x!==position.x||targetPosition.y!==position.y)&&targetPosition){let distanceToTargetXInUnits=targetPosition.x-position.x,distanceToTargetYInUnits=targetPosition.y-position.y,actualDistanceInUnits=Helpers.cL(distanceToTargetXInUnits,distanceToTargetYInUnits),angle=calcNewAangle(distanceToTargetXInUnits,distanceToTargetYInUnits);if(commonStyles="\n      @keyframes fading".concat(uniqueShootingAnimationId," {\n        0%  {opacity: 1;}\n        90% {opacity: 1;}\n        100%  {opacity: 0;}\n      }\n      ").concat(runningTime>=0?"\n          .fading-after-".concat(runningTime,"ms-for-").concat(uniqueShootingAnimationId," {\n              animation: fading").concat(uniqueShootingAnimationId," ").concat(runningTime,"ms linear normal forwards 1;\n          }"):"","\n      "),weaponType===services.vD.energy){let beamClassName="projectile".concat(localId,"_beam");customStyle="\n          @keyframes pulsing".concat(localId," {\n            0%  {opacity: 0.1;}\n            100%  {opacity: 1;}\n          }\n\n          @keyframes elongating").concat(localId," {\n            0%  { width: calc(").concat(actualDistanceInUnits,"em + ").concat(actualDistanceInUnits," * 4px - 20px); }\n            100%  {width: calc(").concat(actualDistanceInUnits,"em + ").concat(actualDistanceInUnits," * 4px - 20px); }\n          }\n\n          @keyframes swiping").concat(localId," {\n            0%  {transform: rotate(").concat(angle+90-1,"deg) translateX(").concat(20,"px);}\n            50%  {transform: rotate(").concat(angle+90+1,"deg) translateX(").concat(20,"px);}\n            100%  {transform: rotate(").concat(angle+90-1,"deg) translateX(").concat(20,"px);}\n          }\n\n          .").concat(beamClassName," {\n            width: ").concat(actualDistanceInUnits,"em;\n            height: 3px;\n            border-radius: 5px;\n            background: #F00;\n            position: absolute;\n            top: 0.5em;\n            left: 0.5em;\n            transform: rotate(").concat(angle+90,"deg);/* overriden by swiping keyframes */\n            transform-origin: left 0px;\n            animation: pulsing").concat(localId," 0.1s ease infinite,\n            elongating").concat(localId," 0.7s ease alternate infinite,\n            swiping").concat(localId," 1s ease alternate infinite;\n            box-shadow: 0 0 5px 5px white;\n            z-index: 10;\n          }\n          "),projectiles.push((0,jsx_runtime.jsx)("div",{className:beamClassName,children:""},beamClassName))}else{for(;projectileNumber--;){let targetVarianceX=Math.random()*varianceBase-varianceBase/2,targetVarianceY=Math.random()*varianceBase-varianceBase/2;customStyle+="\n          @keyframes shooting".concat(localId,"_").concat(projectileNumber," {\n            0%   {transform: translate(0,0) rotate(").concat(angle,"deg) scaleY(1)}\n            100% {transform: translate(\n              ").concat(40*(targetPosition.x-position.x)+targetVarianceX,"px,\n              ").concat(40*(targetPosition.y-position.y)+targetVarianceY,"px\n            ) rotate(").concat(angle,"deg) scaleY(1)}\n          }\n          ")+"\n          .projectile".concat(localId,"_").concat(projectileNumber," {\n            transform: rotateZ(").concat(angle,"deg);\n            animation: shooting").concat(localId,"_").concat(projectileNumber," 0.8s linear infinite;\n            animation-delay: ").concat(.2*projectileNumber,"s;\n          }")}for(projectileNumber=numberOfProjectiles;projectileNumber--;){let className="projectile projectile".concat(localId,"_").concat(projectileNumber);projectiles.push((0,jsx_runtime.jsx)("div",{className:className,children:"."},className))}}}let finalClassName="shooting-visualization fading-after-".concat(runningTime,"ms-for-").concat(uniqueShootingAnimationId);return(0,jsx_runtime.jsxs)("div",{className:finalClassName,children:[(0,jsx_runtime.jsx)("style",{children:customStyle+commonStyles}),projectiles]})}try{ShootingVisualization_ShootingVisualization.displayName="ShootingVisualization",ShootingVisualization_ShootingVisualization.__docgenInfo={description:"Displays a shooting attack visualization",displayName:"ShootingVisualization",props:{targetPosition:{defaultValue:null,description:"Position of a target square in a grid",name:"targetPosition",required:!0,type:{name:"Position"}},position:{defaultValue:null,description:"Position of a source square in a grid",name:"position",required:!0,type:{name:"Position"}},weaponType:{defaultValue:null,description:"Type of a weapon",name:"weaponType",required:!0,type:{name:"enum",value:[{value:'"projectile"'},{value:'"energy"'}]}},actionId:{defaultValue:null,description:"Unique number of this action - used to ensure each attack has a separate animation",name:"actionId",required:!0,type:{name:"number"}},runningTimeInMs:{defaultValue:{value:"1000"},description:"Time to run the visualization animation, in milliseconds. 0 to not run at all, -1 to run infinitely",name:"runningTimeInMs",required:!1,type:{name:"number"}},numberOfProjectiles:{defaultValue:{value:"10"},description:"Number of shots when it's a projectile weapon",name:"numberOfProjectiles",required:!1,type:{name:"number"}},varianceBase:{defaultValue:{value:"7"},description:"Spread of bullets on target, in pixels",name:"varianceBase",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ShootingVisualization/ShootingVisualization.tsx#ShootingVisualization"]={docgenInfo:ShootingVisualization_ShootingVisualization.__docgenInfo,name:"ShootingVisualization",path:"src/components/ShootingVisualization/ShootingVisualization.tsx#ShootingVisualization"})}catch(__react_docgen_typescript_loader_error){}var SlideInPanel=__webpack_require__("./src/components/SlideInPanel/SlideInPanel.tsx");let GradientBolt_GradientBolt=_ref=>{let{lineOfFireLength="20em",version=0,boltFlightTimeInHundredsOfMs=10}=_ref;return(0,jsx_runtime.jsx)("div",{className:"line-of-fire",style:{width:lineOfFireLength},children:(0,jsx_runtime.jsx)("div",{className:"bolt shooting version-".concat(version),style:{animationDuration:"".concat(100*boltFlightTimeInHundredsOfMs,"ms")}})})};try{GradientBolt_GradientBolt.displayName="GradientBolt",GradientBolt_GradientBolt.__docgenInfo={description:"A bolt rendered from a single div with a gradient",displayName:"GradientBolt",props:{version:{defaultValue:{value:"0"},description:"Number of the version of the bolt. 0-7",name:"version",required:!1,type:{name:"number"}},lineOfFireLength:{defaultValue:{value:"20em"},description:"Length of the line of fire in any CSS units",name:"lineOfFireLength",required:!1,type:{name:"string"}},boltFlightTimeInHundredsOfMs:{defaultValue:{value:"10"},description:"Time the bolt will take to travel and vanish from the line of fire (with tail)",name:"boltFlightTimeInHundredsOfMs",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GradientBolt/GradientBolt.tsx#GradientBolt"]={docgenInfo:GradientBolt_GradientBolt.__docgenInfo,name:"GradientBolt",path:"src/components/GradientBolt/GradientBolt.tsx#GradientBolt"})}catch(__react_docgen_typescript_loader_error){}function CursorMessage_CursorMessage(_ref){let{messageText="!",messageTimeInMs=1e3,messageColor="#eee"}=_ref;return(0,jsx_runtime.jsx)("div",{className:"cursor-message",style:{color:messageColor,animation:"fade-out ".concat(messageTimeInMs,"ms linear forwards")},children:messageText})}try{CursorMessage_CursorMessage.displayName="CursorMessage",CursorMessage_CursorMessage.__docgenInfo={description:"",displayName:"CursorMessage",props:{messageText:{defaultValue:{value:"!"},description:"",name:"messageText",required:!1,type:{name:"string"}},messageTimeInMs:{defaultValue:{value:"1000"},description:"",name:"messageTimeInMs",required:!1,type:{name:"number"}},messageColor:{defaultValue:{value:"#eee"},description:"",name:"messageColor",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/CursorMessage/CursorMessage.tsx#CursorMessage"]={docgenInfo:CursorMessage_CursorMessage.__docgenInfo,name:"CursorMessage",path:"src/components/CursorMessage/CursorMessage.tsx#CursorMessage"})}catch(__react_docgen_typescript_loader_error){}},"./src/helpers/Helpers.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function resetGivenFieldsOnACollection(collection){for(var _len=arguments.length,fieldNames=Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)fieldNames[_key-1]=arguments[_key];collection.forEach(item=>{fieldNames.forEach(fieldName=>{item&&(item[fieldName]=void 0)})})}function getNumberWithinBoundaries(value,min,max){return value<min&&(value=min),value>max&&(value=max),value}function getRandomIntInclusive(min,max){return Math.floor(Math.random()*(max-min+1))+min}function calculateAngle(x,y){let angle;return y>=0?angle=-(180/Math.PI*Math.atan(x/y)):y<0&&(angle=180/Math.PI*(Math.atan(-(x/y))+Math.PI)),angle}function calculateDistance(x,y){return Math.sqrt(Math.pow(x,2)+Math.pow(y,2))}function applyMixins(derivedCtor,baseCtors){baseCtors.forEach(baseCtor=>{Object.getOwnPropertyNames(baseCtor.prototype).forEach(name=>{Object.defineProperty(derivedCtor.prototype,name,Object.getOwnPropertyDescriptor(baseCtor.prototype,name))})})}function isSelectedTargeted(selected,targeted){return!!selected&&!!targeted&&!!targeted.entity&&selected.name===targeted.entity.name}function turnFlagsIntoClasses(flags,classNameBase){if(!flags)return"";let flagsToClassess={active:"active",isAvailableDestination:"is-available-destination",isChosenDestination:"is-chosen-destination",isBreathing:"breathing",isDead:"dead",isShooting:"shooting",isTargeted:"targeted",isAttacked:"attacked",isLit:"is-lit",isInTwilightZone:"is-in-twilight-zone"},className="";return classNameBase?classNameBase+="--":classNameBase="",Object.keys(flagsToClassess).forEach(key=>{flags[key]&&(className+=" ".concat(classNameBase).concat(flagsToClassess[key]))}),className}function newCopyOfArray(array){return[].concat(array)}function getCssClassesForAGivenSquare(square){if(!square)return;let squareClassNameBase="square",squareClassName="".concat(squareClassNameBase," ").concat(square&&square.squareType);return squareClassName+=turnFlagsIntoClasses(square,squareClassNameBase),square.entity&&(squareClassName+=turnFlagsIntoClasses(square.entity,squareClassNameBase)),squareClassName}__webpack_require__.d(__webpack_exports__,{Mk:()=>getCssClassesForAGivenSquare,QN:()=>calculateAngle,UC:()=>isSelectedTargeted,cL:()=>calculateDistance,ef:()=>applyMixins,l$:()=>turnFlagsIntoClasses,mn:()=>newCopyOfArray,n0:()=>resetGivenFieldsOnACollection,tT:()=>getRandomIntInclusive,yu:()=>getNumberWithinBoundaries})},"./src/resources/CharacterDefinitions.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{qm:()=>characterDefinitions});var _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/resources/ItemDefinitions.ts"),services__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/services/index.ts");let entitiesInitialValues=[{name:"Lazer Blady",hp:75,maxHp:100,icon:"🧑‍🚀",isFriendly:!0,position:{x:6,y:8},inventory:[new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.LQ],equipment:{hands:new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.qC},actionPoints:10,maxActionPoints:10},{name:"Robot",age:1,hp:50,maxHp:50,icon:"🤖",isFriendly:!0,isBreathing:!1,position:{x:2,y:5},equipment:{hands:new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.qC},inventory:[new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.LQ],bleedingReductionPerTurn:50},{name:"Octo",hp:200,maxHp:200,icon:"🐙",position:{x:8,y:2},bleedingReductionPerTurn:0,bleeding:1,equipment:{hands:new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.qC}},{name:"Squid",hp:100,maxHp:100,icon:"🦑",position:{x:4,y:2},equipment:{hands:new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.vE}},{name:"Ant",age:1,hp:45,maxHp:50,icon:"🐜",isBreathing:!0,position:{x:7,y:5},equipment:{hands:new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.vE}},{name:"Henry The Spider",hp:100,maxHp:150,icon:"🕷️",position:{x:9,y:3},equipment:{hands:new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.qC}},{name:"Mosquito",hp:12,maxHp:20,icon:"🦟",position:{x:0,y:7},equipment:{hands:new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.LQ},actionPoints:1,maxActionPoints:1},{name:"Microbe",hp:1,maxHp:5,icon:"🦠",position:{x:3,y:8},equipment:{hands:new _ItemDefinitions__WEBPACK_IMPORTED_MODULE_0__.qC}}],characterDefinitions=services__WEBPACK_IMPORTED_MODULE_1__.gB.changeEntitiesIntoFullBlownObjects(entitiesInitialValues)},"./src/resources/ItemDefinitions.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{LQ:()=>M16,qC:()=>L30,vE:()=>M40});var services__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/services/index.ts");class M16 extends services__WEBPACK_IMPORTED_MODULE_0__.$S{constructor(){super(...arguments),this.name="M16",this.rounds=30,this.maxRounds=30,this.reloadCostInAP=4,this.damage=3}}class M40 extends services__WEBPACK_IMPORTED_MODULE_0__.$S{constructor(){super(...arguments),this.name="M41A Pulse Rifle",this.rounds=10,this.maxRounds=10,this.reloadCostInAP=4,this.damage=5}}class L30 extends services__WEBPACK_IMPORTED_MODULE_0__.Ty{constructor(){super(...arguments),this.name="L30 Beam Laser",this.rounds=5,this.maxRounds=5,this.reloadCostInAP=2,this.damage=10,this.description=void 0,this.manufacturer=void 0,this.previousOwners=void 0}}},"./src/resources/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{qC:()=>ItemDefinitions.qC,LQ:()=>ItemDefinitions.LQ,Qp:()=>structures}),__webpack_require__("./src/resources/CharacterDefinitions.ts");let structures={box:{name:"box",icon:"📦",hp:50,maxHp:70,isBreathing:!1,isPassable:!1,position:{x:4,y:5}},redBarrel:{name:"redBarrel",icon:"🛢️",hp:50,maxHp:70,isBreathing:!1,isPassable:!0,position:{x:4,y:5}}};var ItemDefinitions=__webpack_require__("./src/resources/ItemDefinitions.ts")},"./src/services/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{gB:()=>EntitiesService,JH:()=>Entity,NR:()=>GameActionsClassForGameComponent,bt:()=>GameLogic,i4:()=>GameModel,D2:()=>GameState,ck:()=>Item,Ty:()=>Lazer,ez:()=>MessageService,mq:()=>RangedWeapon,$S:()=>Rifle,fi:()=>SquaresService,LW:()=>Weapon,vD:()=>WeaponType});class Identifiable{constructor(){this.id=void 0,this.name="",this.icon=" "}}class Positionable{constructor(){this.position={x:void 0,y:void 0},this.isPassable=!1}get isBlocking(){return!this.isPassable}get square(){return SquaresService.getSquareFromPosition(this.position.x,this.position.y)}}class Mortal extends Positionable{constructor(){super(...arguments),this.hp=100,this.maxHp=100}get isDead(){return!this.isAlive}get isAlive(){return this.hp>0}}class HavingInventory extends Identifiable{constructor(){super(...arguments),this.inventory=void 0}takeFromInventory(itemName){this.inventory||(this.inventory=[]);let actualItemIndex=this.inventory.findIndex(item=>item.name===itemName);return -1===actualItemIndex?null:this.inventory.splice(actualItemIndex,1)[0]}addToInventory(item){this.inventory||(this.inventory=[]),this.inventory.push(item)}}var Helpers=__webpack_require__("./src/helpers/Helpers.ts");class Entity{constructor(){this.isFriendly=void 0,this.active=void 0;for(var _len=arguments.length,props=Array(_len),_key=0;_key<_len;_key++)props[_key]=arguments[_key];Object.assign(this,...props)}}(0,Helpers.ef)(Entity,[Identifiable,Positionable,Mortal,class extends Mortal{constructor(){super(...arguments),this.bleeding=0,this.bleedingReductionPerTurn=1}bleed(){let bloodReleased=0;return this.bleeding&&this.isAlive&&(bloodReleased=this.bleeding,this.hp-=bloodReleased,this.bleeding-=this.bleedingReductionPerTurn,this.bleeding<0&&(this.bleeding=0)),bloodReleased}bleedExternally(){if(!this.bleeding)return;let bloodReleased=this.bleed(),square=SquaresService.getSquareFromPosition(this.position.x,this.position.y);SquaresService.addBloodToSquare(square,bloodReleased)}},class extends Identifiable{constructor(){super(...arguments),this.moveDestination=void 0}setMoveDestinationSquareByNumber(squareIndex){this.setMoveDestinationPosition(SquaresService.getSquarePositionFromIndex(squareIndex))}setMoveDestinationPosition(targetPosition){let targetSquare=SquaresService.getSquareFromPosition(targetPosition.x,targetPosition.y),targetSquareNumber=SquaresService.getSquareIndexFromPosition(targetPosition.x,targetPosition.y);SquaresService.isTargetSquareEnterable(targetSquare)?(this.moveDestination=targetPosition,SquaresService.markSquareAtIndexAsChosenDestination(targetSquareNumber)):MessageService.send("".concat(this.name," can't move into square (").concat(targetPosition.x,", ").concat(targetPosition.y,")"))}},class extends Mortal{constructor(){super(...arguments),this.isSupposedToBeBreathing=void 0}get isBreathing(){return this.isAlive&&this.isSupposedToBeBreathing}set isBreathing(value){this.isSupposedToBeBreathing=value}},class extends Identifiable{constructor(){super(...arguments),this.targetPosition=void 0,this.isShooting=void 0,this.ceaseFire=void 0,this.hasWeapon=void 0,this.attackNumber=void 0}attackPosition(targetedSquarePosition){this.hasWeapon?(this.targetPosition=targetedSquarePosition,this.ceaseFire=!1,this.attackNumber?this.attackNumber++:this.attackNumber=1,console.log(this.attackNumber)):MessageService.send("".concat(this.name," can't shoot - no weapon equipped")),console.log(this.name,"is attacking",targetedSquarePosition,this)}},HavingInventory,class extends HavingInventory{constructor(){super(...arguments),this.equipment=void 0,this.hasWeapon=void 0}equipInHands(itemName){this.unEquipFromHands();let item=this.takeFromInventory(itemName);this.equipment.hands=item,item instanceof Weapon?this.hasWeapon=!0:this.hasWeapon=!1}unEquipFromHands(){this.equipment.hands&&(this.addToInventory(this.equipment.hands),this.equipment.hands=null,this.hasWeapon=!1)}},class{constructor(){this.actionPoints=2,this.maxActionPoints=2}}]);class Square extends HavingInventory{constructor(squareIndex){super(),this.squareType="nothing",this.entities=[],this.id=squareIndex,this.entities=[]}addItem(item){this.addToInventory(item)}get items(){return this.inventory}}let SquaresService=new class{constructor(){this.arenaSize=10,this.squares=[],this.isSquareEnterableByFriendlyUnits=square=>["floor","monster-filter"].includes(square.squareType);let i=this.arenaSize*this.arenaSize;for(;0!=i--;)this.initializeSquareAtIndexIfEmpty(i)}getSquareFromPosition(x,y){return this.squares[this.getSquareIndexFromPosition(x,y)]}setSquareValueAtPosition(x,y,value){this.squares[this.getSquareIndexFromPosition(x,y)]=value}getSquareIndexFromPosition(x,y){return y*this.arenaSize+x}getSquarePositionFromIndex(squareIndex){let y=Math.floor(squareIndex/this.arenaSize);return{x:squareIndex%this.arenaSize,y}}setEntityWithinApropriateSquare(entity){this.setEntityWithinASquareAtPosition(entity.position.x,entity.position.y,entity)}setEntityWithinASquareAtPosition(x,y,entity){let squareIndex=this.getSquareIndexFromPosition(x,y);this.initializeSquareAtIndexIfEmpty(squareIndex),this.squares[squareIndex].entities||(this.squares[squareIndex].entities=[]),Array.isArray(this.squares[squareIndex].entities)||(this.squares[squareIndex].entities=[]),this.squares[squareIndex].entities.push(entity)}addBloodToSquare(square,amount){square.blood?square.blood+=amount:square.blood=amount}markSquareAtIndexAsTargeted(squareIndex){Helpers.n0(this.squares,"isTargeted"),this.initializeSquareAtIndexIfEmpty(squareIndex),this.squares[squareIndex].isTargeted=!0}markSquareAtIndexAsAttacked(squareIndex){Helpers.n0(this.squares,"isAttacked"),this.initializeSquareAtIndexIfEmpty(squareIndex),this.squares[squareIndex].isAttacked=!0}markSquareAtIndexAsChosenDestination(squareIndex){Helpers.n0(this.squares,"isChosenDestination"),this.initializeSquareAtIndexIfEmpty(squareIndex),this.squares[squareIndex].isChosenDestination=!0}initializeSquareAtIndexIfEmpty(squareIndex){this.squares[squareIndex]||(this.squares[squareIndex]=new Square(squareIndex),this.squares[squareIndex].position=this.getSquarePositionFromIndex(squareIndex))}markAvailableDestinationsForSelectedEntity(entity){if(entity.active){let{x,y}=entity.position;Helpers.n0(this.squares,"isAvailableDestination");for(let j=y-1;j<=y+1;j++)if(!(j<0)&&!(j>=this.arenaSize))for(let i=x-1;i<=x+1;i++){if(i<0||i>=this.arenaSize||i===x&&j===y)continue;let square=this.getSquareFromPosition(i,j);this.isSquareEnterableByFriendlyUnits(square)&&(square.isAvailableDestination=!0),this.setSquareValueAtPosition(i,j,square)}}}isTargetSquareEnterable(targetSquare){let unpassableEntitiesInThisSquare=targetSquare.entities&&targetSquare.entities.filter(entity=>!entity.isPassable&&entity.isAlive);return!(unpassableEntitiesInThisSquare&&unpassableEntitiesInThisSquare.length)}lightAllSquares(){this.squares.forEach(square=>square.isLit=!0)}castLightsFromFriendlyEntity(entity){if(entity.isFriendly){let{x,y}=entity.position;for(let j=y-2;j<=y+2;j++)if(!(j<0)&&!(j>=this.arenaSize))for(let i=x-2;i<=x+2;i++){if(i<0||i>=this.arenaSize)continue;let square=this.getSquareFromPosition(i,j);square.isInTwilightZone=!0,this.setSquareValueAtPosition(i,j,square)}for(let j=y-1;j<=y+1;j++)if(!(j<0)&&!(j>=this.arenaSize))for(let i=x-1;i<=x+1;i++){if(i<0||i>=this.arenaSize)continue;let square=this.getSquareFromPosition(i,j);square.isLit=!0,this.setSquareValueAtPosition(i,j,square)}}}},defaultEntityValues={bleedingReductionPerTurn:1,isBreathing:!0,isPassable:!1,actionPoints:2,maxActionPoints:2,hasWeapon:!0},EntitiesService=new class{constructor(){this.entities=void 0,this.selected=void 0,this.shouldEntityStopShooting=entity=>entity.ceaseFire||entity.isDead,this.stopShooting=entity=>{entity.isShooting=!1,entity.ceaseFire=!1},this.stopShootingWhenForbidden=entity=>{this.shouldEntityStopShooting(entity)&&this.stopShooting(entity)}}getEntityId(entity){return entity.name}findEntityById(id){return this.entities.filter(entity=>this.getEntityId(entity)===id)[0]}removeEntity(entity){this.removeEntityFromListOfEntities(this.entities,entity)}removeEntityFromListOfEntities(entities,entity){let indexOfEntityToRemove=entities.findIndex(currentEntity=>(currentEntity&&currentEntity.name)===(entity&&entity.name));return -1===indexOfEntityToRemove?-1:(entities.splice(indexOfEntityToRemove,1),0)}addEntity(entity){this.entities.push(entity)}addEntityToDefaultValues(entity){return Object.assign({...defaultEntityValues},entity)}changeEntitiesIntoFullBlownObjects(entitiesInitialValues){return entitiesInitialValues.map(entity=>this.addEntityToDefaultValues(entity)).map(entity=>new Entity(entity))}findItemOnEntity(entity,id){return entity.inventory.filter(item=>this.getEntityId(entity)===id)[0]}moveEntityRandomly(entity){if(entity.isDead||entity.isFriendly)return;let oldPositionX=entity.position.x,oldPositionY=entity.position.y,deltaX=Helpers.tT(-1,1),deltaY=Helpers.tT(-1,1);entity.actionPoints||(deltaX=0,deltaY=0),(deltaX||deltaY)&&entity.actionPoints--,entity.position.x=entity.position.x+deltaX,entity.position.y=entity.position.y+deltaY,entity.position.x=Helpers.yu(entity.position.x,0,9),entity.position.y=Helpers.yu(entity.position.y,0,9);let newSquare=SquaresService.getSquareFromPosition(entity.position.x,entity.position.y);(newSquare&&newSquare.entity||newSquare&&"floor"!==newSquare.squareType)&&(entity.position.x=oldPositionX,entity.position.y=oldPositionY)}stopBreathingForKilledEntity(entity){return entity.isDead&&(entity.isBreathing=!1,this.stopShooting(entity),entity.hp=0),entity}getEntitiesAtGivenPosition(targetPosition){return this.entities.filter(potentialTargetEntity=>potentialTargetEntity.position.x===targetPosition.x&&potentialTargetEntity.position.y===targetPosition.y)}getEntitiesAtGivenPositionThatAreAlive(targetPosition){return this.getEntitiesAtGivenPosition(targetPosition).filter(entity=>entity.isAlive)}selectEntityFromGivenSquare(selected,targeted){let newlySelected;return selected&&targeted&&targeted.entities.length&&(selected.active=!1),targeted&&targeted.entities.length&&((newlySelected=targeted.entities[0]).active=!0),newlySelected}setSelected(givenEntity){return this.selected=givenEntity,this.selected.active=!0,this.selected}setDeselected(selected){return this.selected=null,selected.active=!1,console.log("Deselected:",selected),selected}checkAmmoAndCalculateDamageApplied(entity){let damageApplied=0,equippedWeapon=entity.equipment&&entity.equipment.hands;return equippedWeapon instanceof RangedWeapon?equippedWeapon.isAbleToFire?(damageApplied=equippedWeapon.fire(),entity.isShooting=!0,entity.actionPoints--,damageApplied):(equippedWeapon.rounds="empty",this.stopShooting(entity),MessageService.setCursorMessage("NO AMMO"),MessageService.send("".concat(entity.name," can't shoot, as they have no ammunition loaded.")),0):0}fireAShot(entity){if(!entity.actionPoints||entity.isDead)return;let damageApplied=this.checkAmmoAndCalculateDamageApplied(entity);this.getEntitiesAtGivenPosition(entity.targetPosition).forEach(targetEntity=>{this.applyDamageToTargetEntity(targetEntity,damageApplied)})}reloadWeapon(entity,weapon){let equippedWeapon=entity.equipment&&entity.equipment.hands;if(!(equippedWeapon instanceof RangedWeapon))return 0;if(weapon=equippedWeapon,entity.equipment.hands&&entity.equipment.hands===weapon&&this.stopShooting(entity),weapon.rounds===weapon.maxRounds){MessageService.send("".concat(weapon.name," already fully loaded"));return}entity.actionPoints>=weapon.reloadCostInAP?(entity.actionPoints-=weapon.reloadCostInAP,weapon.reload()):(MessageService.send("".concat(entity.name," has not enough AP to reload ").concat(weapon.name)),MessageService.setCursorMessage("NO AP"))}applyDamageToTargetEntity(targetEntity,damage){damage&&(targetEntity.hp-=damage,targetEntity.bleeding=5)}ceaseFireNextTickIfNoAliveTargets(entity){entity.targetPosition&&(EntitiesService.getEntitiesAtGivenPositionThatAreAlive(entity.targetPosition).length||(entity.ceaseFire=!0))}isEntityTargettingSomethingAlive(entity){let areThereAliveTargetEntities=entity.targetPosition&&!!EntitiesService.getEntitiesAtGivenPositionThatAreAlive(entity.targetPosition).length;return entity.targetPosition&&(entity.targetPosition.x!==entity.position.x||entity.targetPosition.y!==entity.position.y)&&areThereAliveTargetEntities}applyEffectsOfBleeding(entity){return entity.bleedExternally(),entity}moveEntityIntoChosenDestination(entity){if(!entity.actionPoints)return entity;if(!entity.isDead&&entity.moveDestination){let chosenDestinationSquare=SquaresService.getSquareFromPosition(entity.moveDestination.x,entity.moveDestination.y);entity.position=entity.moveDestination,delete entity.moveDestination,chosenDestinationSquare.isChosenDestination=void 0,entity.actionPoints--}return entity}setMoveDestinationOnASelectedEntity(selected,targetedSquarePosition){selected.moveDestination=targetedSquarePosition}moveEntities(){this.entities.filter(entity=>!entity.isFriendly).forEach(entity=>{this.moveEntityRandomly(entity)})}refillActionPointsForAllEntities(){this.entities.forEach(entity=>{entity.actionPoints=entity.maxActionPoints})}};class Item{constructor(){this.name=""}}class Weapon extends Item{constructor(){super(...arguments),this.type=void 0,this.causesBleeding=0,this.range=0,this.damage=0}}class RangedWeapon extends Weapon{constructor(){super(...arguments),this.rounds=0,this.maxRounds=5,this.reloadCostInAP=1}fire(){return this.rounds--,console.log("Firing ranged weapon. Damage: ",this.damage),this.damage}get isAbleToFire(){return this.rounds>0}reload(){this.rounds=this.maxRounds}}let WeaponType=function(WeaponType){return WeaponType.projectile="projectile",WeaponType.energy="energy",WeaponType}({});class Rifle extends RangedWeapon{constructor(){super(...arguments),this.type=WeaponType.projectile,this.range=8,this.damage=1,this.causesBleeding=2}}class Lazer extends RangedWeapon{constructor(){super(...arguments),this.type=WeaponType.energy,this.range=10,this.damage=5,this.causesBleeding=0}}let MessageService=new class{constructor(){this.messages=[],this.cursorMessage="",this.cursorMessageNumber=0}send(message){let timestamp=new Date().toISOString().substring(11,23);this.messages.push({message,timestamp})}setCursorMessage(messageText){this.cursorMessage=messageText,this.cursorMessageNumber++}};var CharacterDefinitions=__webpack_require__("./src/resources/CharacterDefinitions.ts");let intro_namespaceObject=JSON.parse('[{"id":0,"name":"","squareType":"floor","position":{"x":0,"y":0}},{"id":1,"name":"","squareType":"floor","position":{"x":1,"y":0}},{"id":2,"name":"","squareType":"floor","position":{"x":2,"y":0}},{"id":3,"name":"","squareType":"floor","position":{"x":3,"y":0}},{"id":4,"name":"","squareType":"floor","position":{"x":4,"y":0}},{"id":5,"name":"","squareType":"floor","position":{"x":5,"y":0}},{"id":6,"name":"","squareType":"floor","position":{"x":6,"y":0}},{"id":7,"name":"","squareType":"floor","position":{"x":7,"y":0}},{"id":8,"name":"","squareType":"floor","position":{"x":8,"y":0}},{"id":9,"name":"","squareType":"floor","position":{"x":9,"y":0}},{"id":10,"name":"Teleport to SW Corner","description":"Moves you to 0,9","icon":"⬇️","squareType":"floor","position":{"x":0,"y":1}},{"id":11,"name":"","squareType":"wall","position":{"x":1,"y":1}},{"id":12,"name":"","squareType":"wall","position":{"x":2,"y":1}},{"id":13,"name":"","squareType":"wall","position":{"x":3,"y":1}},{"id":14,"name":"","squareType":"floor","position":{"x":4,"y":1}},{"id":15,"name":"","squareType":"wall","position":{"x":5,"y":1}},{"id":16,"name":"","squareType":"wall","position":{"x":6,"y":1}},{"id":17,"name":"","squareType":"floor","position":{"x":7,"y":1}},{"id":18,"name":"","squareType":"floor","position":{"x":8,"y":1}},{"id":19,"name":"","squareType":"floor","position":{"x":9,"y":1}},{"id":20,"name":"","squareType":"wall","position":{"x":0,"y":2}},{"id":21,"name":"","squareType":"wall","position":{"x":1,"y":2}},{"id":22,"name":"","squareType":"floor","position":{"x":2,"y":2}},{"id":23,"name":"","squareType":"wall","position":{"x":3,"y":2}},{"id":24,"name":"","squareType":"floor","position":{"x":4,"y":2}},{"id":25,"name":"","squareType":"wall","position":{"x":5,"y":2}},{"id":26,"name":"","squareType":"floor","position":{"x":6,"y":2}},{"id":27,"name":"","squareType":"floor","position":{"x":7,"y":2}},{"id":28,"name":"","squareType":"floor","position":{"x":8,"y":2},"entity":{"bleedingReductionPerTurn":0,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Octo","hp":200,"maxHp":200,"icon":"🐙","position":{"x":8,"y":2},"bleeding":1,"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}},"entities":[{"bleedingReductionPerTurn":0,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Octo","hp":200,"maxHp":200,"icon":"🐙","position":{"x":8,"y":2},"bleeding":1,"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}}]},{"id":29,"name":"","squareType":"floor","position":{"x":9,"y":2}},{"id":30,"name":"","squareType":"floor","position":{"x":0,"y":3}},{"id":31,"name":"","squareType":"floor","position":{"x":1,"y":3}},{"id":32,"name":"","squareType":"floor","position":{"x":2,"y":3}},{"id":33,"name":"","squareType":"floor","position":{"x":3,"y":3}},{"id":34,"name":"","squareType":"floor","position":{"x":4,"y":3}},{"id":35,"name":"","squareType":"wall","position":{"x":5,"y":3}},{"id":36,"name":"","squareType":"floor","position":{"x":6,"y":3}},{"id":37,"name":"","squareType":"floor","position":{"x":7,"y":3}},{"id":38,"name":"","squareType":"floor","position":{"x":8,"y":3}},{"id":39,"name":"","squareType":"floor","position":{"x":9,"y":3},"entity":{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Henry The Spider","hp":100,"maxHp":150,"icon":"🕷️","position":{"x":9,"y":3},"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}},"entities":[{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Henry The Spider","hp":100,"maxHp":150,"icon":"🕷️","position":{"x":9,"y":3},"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}}]},{"id":40,"name":"","squareType":"floor","position":{"x":0,"y":4}},{"id":41,"name":"","squareType":"wall","position":{"x":1,"y":4}},{"id":42,"name":"","squareType":"wall","position":{"x":2,"y":4}},{"id":43,"name":"","squareType":"floor","position":{"x":3,"y":4}},{"id":44,"name":"","squareType":"floor","position":{"x":4,"y":4}},{"id":45,"name":"","squareType":"wall","position":{"x":5,"y":4}},{"id":46,"name":"","squareType":"floor","position":{"x":6,"y":4},"entity":{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":0,"maxActionPoints":2,"hasWeapon":true,"name":"Squid","hp":100,"maxHp":100,"icon":"🦑","position":{"x":6,"y":4},"equipment":{"hands":{"name":"M41A Pulse Rifle","causesBleeding":2,"range":4,"damage":1,"rounds":40,"maxRounds":40,"type":"projectile"}}},"entities":[{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":0,"maxActionPoints":2,"hasWeapon":true,"name":"Squid","hp":100,"maxHp":100,"icon":"🦑","position":{"x":6,"y":4},"equipment":{"hands":{"name":"M41A Pulse Rifle","causesBleeding":2,"range":4,"damage":1,"rounds":40,"maxRounds":40,"type":"projectile"}}}]},{"id":47,"name":"","squareType":"floor","position":{"x":7,"y":4}},{"id":48,"name":"","squareType":"floor","position":{"x":8,"y":4}},{"id":49,"name":"","squareType":"floor","position":{"x":9,"y":4}},{"id":50,"name":"","squareType":"floor","position":{"x":0,"y":5}},{"id":51,"name":"","squareType":"wall","position":{"x":1,"y":5}},{"id":52,"name":"","squareType":"floor","position":{"x":2,"y":5}},{"id":53,"name":"","squareType":"floor","position":{"x":3,"y":5},"entity":{"isFriendly":true,"bleedingReductionPerTurn":50,"isSupposedToBeBreathing":false,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Robot","age":1,"hp":50,"maxHp":50,"icon":"🤖","position":{"x":3,"y":5},"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}},"entities":[{"isFriendly":true,"bleedingReductionPerTurn":50,"isSupposedToBeBreathing":false,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Robot","age":1,"hp":50,"maxHp":50,"icon":"🤖","position":{"x":3,"y":5},"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}}]},{"id":54,"name":"","squareType":"floor","position":{"x":4,"y":5}},{"id":55,"name":"","squareType":"wall","position":{"x":5,"y":5}},{"id":56,"name":"","squareType":"floor","position":{"x":6,"y":5}},{"id":57,"name":"","squareType":"floor","position":{"x":7,"y":5}},{"id":58,"name":"","squareType":"wall","position":{"x":8,"y":5}},{"id":59,"name":"","squareType":"wall","position":{"x":9,"y":5}},{"id":60,"name":"","squareType":"floor","position":{"x":0,"y":6}},{"id":61,"name":"","squareType":"wall","position":{"x":1,"y":6}},{"id":62,"name":"","squareType":"wall","position":{"x":2,"y":6}},{"id":63,"name":"","squareType":"wall","position":{"x":3,"y":6}},{"id":64,"name":"","squareType":"wall","position":{"x":4,"y":6}},{"id":65,"name":"","squareType":"wall","position":{"x":5,"y":6}},{"id":66,"name":"","squareType":"floor","position":{"x":6,"y":6}},{"id":67,"name":"","squareType":"wall","position":{"x":7,"y":6}},{"id":68,"name":"","squareType":"wall","position":{"x":8,"y":6}},{"id":69,"name":"","squareType":"nothing","position":{"x":9,"y":6}},{"id":70,"name":"","squareType":"floor","position":{"x":0,"y":7}},{"id":71,"name":"","squareType":"floor","position":{"x":1,"y":7}},{"id":72,"name":"","squareType":"floor","position":{"x":2,"y":7},"entity":{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":1,"maxActionPoints":1,"hasWeapon":true,"name":"Mosquito","hp":12,"maxHp":20,"icon":"🦟","position":{"x":2,"y":7},"equipment":{"hands":{"name":"M16","causesBleeding":2,"range":4,"damage":2,"rounds":15,"maxRounds":20,"type":"projectile"}}},"entities":[{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":1,"maxActionPoints":1,"hasWeapon":true,"name":"Mosquito","hp":12,"maxHp":20,"icon":"🦟","position":{"x":2,"y":7},"equipment":{"hands":{"name":"M16","causesBleeding":2,"range":4,"damage":2,"rounds":15,"maxRounds":20,"type":"projectile"}}}]},{"id":73,"name":"","squareType":"floor","position":{"x":3,"y":7}},{"id":74,"name":"","squareType":"floor","position":{"x":4,"y":7}},{"id":75,"name":"","squareType":"wall","position":{"x":5,"y":7}},{"id":76,"name":"","squareType":"floor","position":{"x":6,"y":7}},{"id":77,"name":"","squareType":"wall","position":{"x":7,"y":7}},{"id":78,"name":"","squareType":"floor","position":{"x":8,"y":7},"entity":{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":0,"maxActionPoints":2,"hasWeapon":true,"name":"Ant","age":1,"hp":45,"maxHp":50,"icon":"🐜","position":{"x":8,"y":7},"equipment":{"hands":{"name":"M41A Pulse Rifle","causesBleeding":2,"range":4,"damage":1,"rounds":40,"maxRounds":40,"type":"projectile"}}},"entities":[{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":0,"maxActionPoints":2,"hasWeapon":true,"name":"Ant","age":1,"hp":45,"maxHp":50,"icon":"🐜","position":{"x":8,"y":7},"equipment":{"hands":{"name":"M41A Pulse Rifle","causesBleeding":2,"range":4,"damage":1,"rounds":40,"maxRounds":40,"type":"projectile"}}}]},{"id":79,"name":"","squareType":"floor","position":{"x":9,"y":7}},{"id":80,"name":"","squareType":"floor","position":{"x":0,"y":8}},{"id":81,"name":"","squareType":"floor","position":{"x":1,"y":8}},{"id":82,"name":"","squareType":"floor","position":{"x":2,"y":8}},{"id":83,"name":"","squareType":"floor","position":{"x":3,"y":8},"entity":{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Microbe","hp":1,"maxHp":5,"icon":"🦠","position":{"x":3,"y":8},"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}},"entities":[{"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Microbe","hp":1,"maxHp":5,"icon":"🦠","position":{"x":3,"y":8},"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}}]},{"id":84,"name":"","squareType":"floor","position":{"x":4,"y":8}},{"id":85,"name":"Teleport to NW Corner","description":"Moves you to 0,0","icon":"↖️","squareType":"floor","position":{"x":5,"y":8}},{"id":86,"name":"","squareType":"floor","position":{"x":6,"y":8},"isTargeted":true,"entity":{"isFriendly":true,"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Lazer Blady","hp":75,"maxHp":100,"icon":"🧑‍🚀","position":{"x":6,"y":8},"inventory":[{"name":"M16","causesBleeding":2,"range":4,"damage":2,"rounds":15,"maxRounds":20,"type":"projectile"}],"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}},"entities":[{"isFriendly":true,"bleedingReductionPerTurn":1,"isSupposedToBeBreathing":true,"isPassable":false,"actionPoints":2,"maxActionPoints":2,"hasWeapon":true,"name":"Lazer Blady","hp":75,"maxHp":100,"icon":"🧑‍🚀","position":{"x":6,"y":8},"inventory":[{"name":"M16","causesBleeding":2,"range":4,"damage":2,"rounds":15,"maxRounds":20,"type":"projectile"}],"equipment":{"hands":{"name":"Assault Lazer Cannon","causesBleeding":0,"range":6,"damage":3,"rounds":30,"maxRounds":30,"type":"lazer"}}}]},{"id":87,"name":"","squareType":"floor","position":{"x":7,"y":8}},{"id":88,"name":"EXIT","description":"Reach this place to win The Game","icon":"🚪","squareType":"floor","position":{"x":8,"y":8}},{"id":89,"name":"","squareType":"floor","position":{"x":9,"y":8}},{"id":90,"name":"","squareType":"floor","position":{"x":0,"y":9}},{"id":91,"name":"","squareType":"floor","position":{"x":1,"y":9}},{"id":92,"name":"","squareType":"floor","position":{"x":2,"y":9}},{"id":93,"name":"","squareType":"floor","position":{"x":3,"y":9}},{"id":94,"name":"Healing Station","icon":"🏥","description":"This advanced healing station repairs all damage done to a given entity","squareType":"floor","position":{"x":4,"y":9}},{"id":95,"name":"","squareType":"wall","position":{"x":5,"y":9}},{"id":96,"name":"","squareType":"floor","position":{"x":6,"y":9}},{"id":97,"name":"","squareType":"wall","position":{"x":7,"y":9}},{"id":98,"name":"","squareType":"floor","position":{"x":8,"y":9}},{"id":99,"name":"","squareType":"floor","position":{"x":9,"y":9}}]');var resources=__webpack_require__("./src/resources/index.ts");let GameModel=new class{constructor(){this.generatedEntities=void 0,this.generatedEntitiesJSON=void 0,this.entities=void 0,this.squares=void 0,this.saveMap=()=>{console.log("Alive suares:",SquaresService.squares);let squaresStringified=JSON.stringify(JSON.parse(JSON.stringify(SquaresService.squares)).map(square=>square));console.log(squaresStringified);let result=window.prompt("Enter the name of saved map.","map00");localStorage[result]=squaresStringified,window.prompt("Saved the following map as "+result,squaresStringified)},this.loadMap=GameActions=>{let mapNames=Object.keys(localStorage),message="Enter the name of map to load.\n"+"Maps available in localStorage: ".concat(mapNames,"\n")+"Be aware item processing is not working fully yet.";console.log(mapNames);let result=window.prompt(message,mapNames);if(!result)return;let squaresStringified=localStorage[result];if(!squaresStringified)return;console.log(squaresStringified);let squaresLoaded=JSON.parse(squaresStringified);this.loadSquaresIntoService(squaresLoaded);let loadedGeneratedEntities=JSON.parse(this.generatedEntitiesJSON);function processEquipmentForEntityOrEntityRecord(entity){return entity.equipment&&entity.equipment.hands&&(entity.equipment.hands=(entity.equipment.hands,new resources.qC)),entity.inventory&&(entity.inventory=entity.inventory.map(itemRecord=>new resources.qC)),entity}this.loadGeneratedEntitiesIntoService(loadedGeneratedEntities),console.log(EntitiesService.entities),EntitiesService.setSelected(EntitiesService.findEntityById("Lazer Blady G")),GameActions.setSelectedInStateAccordingToSelectedInEntitiesService();let entitiesProcessed=EntitiesService.entities.map(entity=>processEquipmentForEntityOrEntityRecord(entity));console.log("ALIVE ENTITIES?",entitiesProcessed),this.loadEntitiesIntoService(entitiesProcessed),GameActions.setSquaresAccordingToEntities(),GameActions.processInterface()},this.loadSquaresIntoService=squaresLoaded=>{SquaresService.squares.forEach((square,index)=>{let sourceSquare=squaresLoaded[index];square.squareType=sourceSquare&&sourceSquare.squareType||"floor",square.icon=sourceSquare&&sourceSquare.icon||"",square.name=sourceSquare&&sourceSquare.name||"",square.description=sourceSquare&&sourceSquare.description||""})},this.loadEntitiesIntoService=entities=>{EntitiesService.entities=entities},this.loadGeneratedEntitiesIntoService=generatedEntities=>{EntitiesService.entities=EntitiesService.changeEntitiesIntoFullBlownObjects(generatedEntities)},this.loadBuiltInMap=()=>{this.loadSquaresIntoService(intro_namespaceObject)},this.loadPredefinedEntitities=()=>{console.log(CharacterDefinitions.qm),this.loadEntitiesIntoService(CharacterDefinitions.qm)},this.loadGeneratedEntitities=()=>{this.loadGeneratedEntitiesIntoService(this.generatedEntitiesJSON)},this.generateMAP=()=>{function randomizeSquareTypeNumber(min,max){return parseInt(Math.random()*(max-min)+min)}let arrMap=[],squares=[...Array(100).keys()],squareType="wall",id=0,idx=0,idy=0;squares.forEach(square=>{let ent={bleedingReductionPerTurn:1,isSupposedToBeBreathing:!0,isPassable:!1,actionPoints:1,maxActionPoints:1,hasWeapon:!1,name:"Mosquito_".concat(id),hp:12,maxHp:20,icon:"🦟",position:{x:idx,y:idy}};if("wall"==squareType||"nothing"==squareType)switch(randomizeSquareTypeNumber(0,4)){case 3:case 2:case 0:squareType="floor";break;case 1:squareType="wall"}else switch(randomizeSquareTypeNumber(0,4)){case 3:case 2:squareType="floor";break;case 1:squareType="wall";break;case 0:squareType="nothing"}let newSquare={id:id,name:"",icon:"",squareType:squareType,entities:[],position:{x:idx,y:idy},description:""};"floor"==squareType?arrMap.length>1&&(0!=arrMap[arrMap.length-1].entities.length||0!=arrMap[arrMap.length-2].entities.length)?arrMap.push(newSquare):(newSquare.entities.push(ent),console.log("adding  entitty to map",squareType,newSquare,ent),arrMap.push(newSquare),this.generatedEntities.push(ent)):arrMap.push(newSquare),0!=++id&&id%SquaresService.arenaSize==0?(idx=0,idy++):idx++});let lazerBlady={isFriendly:!0,bleedingReductionPerTurn:1,isSupposedToBeBreathing:!0,isPassable:!1,actionPoints:6,maxActionPoints:10,hasWeapon:!0,name:"Lazer Blady G",hp:75,maxHp:100,icon:"🧑‍🚀",position:{x:6,y:8},inventory:[new resources.LQ],equipment:{hands:new resources.qC}};this.generatedEntities.push(lazerBlady),arrMap[SquaresService.getSquareIndexFromPosition(lazerBlady.position.x,lazerBlady.position.y)].entities.push(lazerBlady),console.log(arrMap,this.generatedEntities,"dupa blady"),this.generatedEntitiesJSON=JSON.stringify(this.generatedEntities);let jsonMap=JSON.stringify(arrMap);localStorage.setItem("autoGenMap",jsonMap),this.generatedEntities=[]},this.entities=EntitiesService.entities,this.squares=SquaresService.squares,this.generatedEntities=[],this.generatedEntitiesJSON={}}};var scriptTypes=function(scriptTypes){return scriptTypes.entityPresent="entity-present",scriptTypes.allEntitiesDead="all-entities-dead",scriptTypes}(scriptTypes||{});let ScriptsService=new class{constructor(){this.scripts=[{what:scriptTypes.entityPresent,where:{x:8,y:8},who:"Lazer Blady",condition:"alive",params:[],result:{action:"message",params:["You have reached the exit. You have won the game."]}},{what:scriptTypes.entityPresent,where:{x:6,y:8},who:"Lazer Blady",condition:"alive",params:[],result:{action:"load-map",params:["A2"]}},{what:scriptTypes.entityPresent,where:{x:4,y:9},condition:"alive",params:[],result:{action:"heal",params:[]}},{what:scriptTypes.entityPresent,where:{x:5,y:8},condition:"alive",params:[],result:{action:"move",params:[{x:0,y:0}]}},{what:scriptTypes.entityPresent,where:{x:0,y:1},result:{action:"move",params:[{x:0,y:9}]}}],this.runScripts=param=>{this.scripts.forEach(script=>this.runScript(script))},console.debug(JSON.stringify(this.scripts))}runScript(script){console.log("Running script.",script),this.isConditionFullfilled(script)&&this.executeResult(script)}isConditionFullfilled(script){switch(script.what){case scriptTypes.entityPresent:if(!script.where)break;let entitiesFoundAtLocationGiven=EntitiesService.getEntitiesAtGivenPosition(script.where);console.log("There are ".concat(entitiesFoundAtLocationGiven.length," entities at ").concat(script.where.x,", ").concat(script.where.y));let isAnyEntityPresentAtGivenLocation=entitiesFoundAtLocationGiven.length>0;if(!script.who)return isAnyEntityPresentAtGivenLocation;{let isGivenEntityFoundAtGivenLocation=!1;return entitiesFoundAtLocationGiven.forEach(entityAtLocation=>{entityAtLocation.name===script.who&&(isGivenEntityFoundAtGivenLocation=!0)}),isGivenEntityFoundAtGivenLocation}}return!1}executeResult(script){switch(script.result.action){case"message":MessageService.send(script.result.params[0]);break;case"load-map":console.log("Going to loadMap",script.result.params[0]);break;case"heal":console.log("Going to heal ".concat(script.where.x,",").concat(script.where.y)),EntitiesService.getEntitiesAtGivenPosition(script.where).forEach(entityAtLocation=>{MessageService.send("Healing ".concat(entityAtLocation.name," from ").concat(entityAtLocation.hp," to ").concat(entityAtLocation.maxHp)),entityAtLocation.hp=entityAtLocation.maxHp});break;case"move":console.log("Going to heal ".concat(script.where.x,",").concat(script.where.y)),EntitiesService.getEntitiesAtGivenPosition(script.where).forEach(entityAtLocation=>{let targetDestination=script.result.params[0];MessageService.send("Moving ".concat(entityAtLocation.name," from ").concat(entityAtLocation.position.x,", ").concat(entityAtLocation.position.y," to\n          ").concat(targetDestination.x,",").concat(targetDestination.y)),entityAtLocation.position.x=targetDestination.x,entityAtLocation.position.y=targetDestination.y})}}},GameLogic=new class{constructor(){this.model=void 0,this.run=()=>{console.log("Running Game Logic"),console.log(GameModel.entities)},this.calculateNextInterfaceState=previousState=>{let{entities,selected}=previousState;return entities.forEach(entity=>{entity===selected&&SquaresService.markAvailableDestinationsForSelectedEntity(selected)}),previousState},this.syncSquaresWithEntities=previousState=>{let squares=Helpers.mn(previousState.squares);SquaresService.squares=squares;let entities=EntitiesService.entities;return entities.length&&Helpers.n0(squares,"entity","entities"),entities.forEach(entity=>{SquaresService.setEntityWithinApropriateSquare(entity)}),{squares,entities}},this.deselectAllEntities=()=>{Helpers.n0(EntitiesService.entities,"active"),Helpers.n0(SquaresService.squares,"isChosenDestination","isAvailableDestination")},this.ceaseFire=()=>{Helpers.n0(GameModel.entities,"isShooting")},this.model=GameModel}calculateNextGameStateAfterProcessingAGivenEntity(previousState,givenEntity){if(0===givenEntity.actionPoints)return MessageService.send("".concat(givenEntity.name," has not enough AP to execute this action")),MessageService.setCursorMessage("NO AP"),previousState;let{entities}=previousState;return this.processAnEntity(givenEntity),previousState.enemiesAlive=this.calculateNumberOfAliveEnemies(entities),previousState.friendsAlive=this.calculateNumberOfAliveFriends(entities),ScriptsService.runScripts(givenEntity),previousState}processAnEntity(entity){console.log("start procesing",entity),EntitiesService.moveEntityRandomly(entity),EntitiesService.moveEntityIntoChosenDestination(entity),EntitiesService.stopShootingWhenForbidden(entity),EntitiesService.isEntityTargettingSomethingAlive(entity)&&EntitiesService.fireAShot(entity),EntitiesService.ceaseFireNextTickIfNoAliveTargets(entity),entity.bleedExternally(),EntitiesService.stopBreathingForKilledEntity(entity),SquaresService.markAvailableDestinationsForSelectedEntity(entity),console.log("end procesing",entity)}calculateNumberOfAliveFriends(entities){return entities.filter(entity=>entity.isFriendly&&entity.isAlive).length}calculateNumberOfAliveEnemies(entities){let amountOfAliveEnemies=0;return entities.forEach(entity=>{!entity.isFriendly&&entity.isAlive&&amountOfAliveEnemies++}),amountOfAliveEnemies}};class GameState{constructor(){Object.assign(this,{entities:EntitiesService.entities,squares:SquaresService.squares,selected:EntitiesService.selected,targeted:null,targetedSquareNumber:null,arenaSize:10,squareSize:40,enemiesAlive:GameLogic.calculateNumberOfAliveEnemies(EntitiesService.entities),friendsAlive:GameLogic.calculateNumberOfAliveFriends(EntitiesService.entities),isAutoLoopOn:!1,isBoardRotated:!1,isEditorOn:!1})}}let gameComponent=null;class GameActionsClassForGameComponent{constructor(that){this.entitiesProcessingLoopIntervalHandle=null,this.playerActionTime=1e3,this.toggleEditorMode=()=>{gameComponent.state.isEditorOn?gameComponent.setState(prevState=>({squares:SquaresService.squares,entities:EntitiesService.entities,isEditorOn:!1})):(Helpers.n0(gameComponent.state.squares,"blood","entity"),gameComponent.setState(prevState=>({entities:[],isEditorOn:!0})))},this.loop=()=>{if(console.debug("Attempting loop"),this.isTurnInProgress){setTimeout(this.loop,1e3);return}console.debug("Executing nextStep"),this.nextTurn(),gameComponent.state.isAutoLoopOn&&(console.debug("Scheduling next loop step in 1s"),setTimeout(this.loop,1e3))},this.endTurn=()=>{gameComponent.setState({isAutoLoopOn:!1}),this.nextTurn()},this.executeActions=()=>{gameComponent.setState(prevState=>GameLogic.calculateNextGameStateAfterProcessingAGivenEntity(prevState,EntitiesService.selected),()=>this.afterExecuteActions()),this.processInterface()},this.afterExecuteActions=()=>{this.setSquaresAccordingToEntities()},this.handleKeyPress=param=>{console.log(param),"space"===param&&this.executeActions()},this.handleClickV2=squareIndex=>{gameComponent.setState(state=>{let{selected,targeted,targetedSquareNumber:selectedSquareNumber}=state,{squares,entities,isEditorOn}=state,previousTargeted=targeted;if(targeted=squares[squareIndex],selectedSquareNumber=squareIndex,SquaresService.markSquareAtIndexAsTargeted(squareIndex),selected.isShooting=!1,isEditorOn)switch(targeted.squareType){case"floor":targeted.squareType="wall";break;case"wall":targeted.squareType="nothing";break;case"nothing":targeted.squareType="monster-filter";break;case"monster-filter":targeted.squareType="floor"}if(previousTargeted===targeted&&selected&&doesSquareHaveAliveEntities(targeted)){let targetSquarePosition=SquaresService.getSquarePositionFromIndex(squareIndex);selected.attackPosition(targetSquarePosition),SquaresService.markSquareAtIndexAsAttacked(squareIndex),delete selected.moveDestination,delete selected.isShooting,Helpers.n0(squares,"isChosenDestination"),this.executeActions()}else previousTargeted===targeted&&targeted.isAvailableDestination&&(selected.setMoveDestinationSquareByNumber(squareIndex),delete selected.targetPosition,delete selected.isShooting,Helpers.n0(squares,"isAttacked"),this.executeActions());if(previousTargeted===targeted){var _targeted,_targeted$entities,_targeted2;let targetEntity=(null===(_targeted=targeted)||void 0===_targeted?void 0:null===(_targeted$entities=_targeted.entities)||void 0===_targeted$entities?void 0:_targeted$entities.length)&&(null===(_targeted2=targeted)||void 0===_targeted2?void 0:_targeted2.entities[0]);!selected&&null!=targetEntity&&targetEntity.isAlive&&null!=targetEntity&&targetEntity.isFriendly?(selected=EntitiesService.selectEntityFromGivenSquare(selected,targeted),EntitiesService.setSelected(selected),this.setSelectedInStateAccordingToSelectedInEntitiesService()):Helpers.UC(selected,targeted)}function doesSquareHaveAliveEntities(square){return!!(square.entities&&square.entities.find(entity=>entity.isAlive))}return{squares,entities,selected,targeted,targetedSquareNumber:selectedSquareNumber}},()=>this.processInterface())},this.aggro=entity=>{let position=entity.position,entitiesToAttack=this.findEntitiesThatAreClose(position).filter(closeEntity=>closeEntity.hp>0);if(entitiesToAttack.length){let firstAmongThem=entitiesToAttack[0];entity.attackPosition(firstAmongThem.position)}},this.nuke=dmg=>{gameComponent.setState(state=>{let{entities}=state;return entities.forEach(entity=>{entity.hp=entity.hp-dmg}),{entities}},()=>{this.processEntities()})},this.toggleRotateBoard=()=>{gameComponent.setState({isBoardRotated:!gameComponent.state.isBoardRotated})},this.switchAutoLoop=()=>{gameComponent.setState(previousState=>{let isAutoLoopOn=!previousState.isAutoLoopOn;return console.info("Switching auto loop to",isAutoLoopOn),{isAutoLoopOn}},()=>{gameComponent.state.isAutoLoopOn&&this.loop()})},this.onInventoryClick=(entity,itemName)=>{gameComponent.setState(prevState=>{let entities=[].concat(prevState.entities);EntitiesService.entities=entities;let entityId=EntitiesService.getEntityId(entity),actualEntity=EntitiesService.findEntityById(entityId);return actualEntity.equipment.hands&&actualEntity.equipment.hands.name===itemName?actualEntity.unEquipFromHands():actualEntity.equipInHands(itemName),actualEntity.isShooting=!1,{entities}}),console.log(entity,itemName)},this.handleDeselectAllEntities=()=>{gameComponent.setState(state=>{let{selected}=state,{squares,entities}=state;return GameLogic.deselectAllEntities(),{squares,entities,selected:void 0}},()=>{})},this.ceaseFire=()=>{Helpers.n0(EntitiesService.entities,"isShooting"),this.processInterface()},this.startUpdatingClickPositionCssVariables=()=>{let updateClickPositionCssVariables=(x,y)=>{console.debug("CLICK EVENT AT:",x,y),document.documentElement.style.setProperty("--mouse-click-position-x",x+"px"),document.documentElement.style.setProperty("--mouse-click-position-y",y+"px")};document.addEventListener("click",event=>updateClickPositionCssVariables(event.clientX,event.clientY))},gameComponent=that}zoomIn(){gameComponent.setState(prevState=>({squareSize:prevState.squareSize+5}))}zoomOut(){gameComponent.setState(prevState=>({squareSize:prevState.squareSize-5}))}get isTurnInProgress(){return this.entitiesProcessingLoopIntervalHandle}nextTurn(){gameComponent.turnNumber++,console.info("Starting processing turn #",gameComponent.turnNumber),EntitiesService.refillActionPointsForAllEntities(),Helpers.n0(EntitiesService.entities,"targetPosition","isShooting"),Helpers.n0(SquaresService.squares,"isAttacked"),this.processEntities()}processEntities(){this.drawAggro(),this.entitiesProcessingLoopIntervalHandle=setInterval(()=>this.processNextUnprocessedEntity(),100)}processNextUnprocessedEntity(){let entitiesForProcessing=EntitiesService.entities.filter(entity=>!entity.isFriendly&&entity.isAlive&&entity.actionPoints>0);if(entitiesForProcessing.length){let entityForThisTurn=entitiesForProcessing[0];this.setNewStateAfterProcessingChosenEntity(entityForThisTurn)}else clearInterval(this.entitiesProcessingLoopIntervalHandle),this.entitiesProcessingLoopIntervalHandle=null,console.log("All entities processed.")}setNewStateAfterProcessingChosenEntity(entity){gameComponent.setState(prevState=>GameLogic.calculateNextGameStateAfterProcessingAGivenEntity(prevState,entity),()=>this.setSquaresAccordingToEntities()),this.processInterface()}processInterface(){gameComponent.setState(prevState=>GameLogic.calculateNextInterfaceState(prevState),()=>this.setSquaresAccordingToEntities())}setSelectedInStateAccordingToSelectedInEntitiesService(){gameComponent.setState(prevState=>({selected:EntitiesService.selected}))}setSquaresAccordingToEntities(){gameComponent.setState(prevState=>GameLogic.syncSquaresWithEntities(prevState))}drawAggro(){EntitiesService.entities.forEach(entity=>{entity.isFriendly||(entity.isShooting=!1,this.aggro(entity))})}findEntitiesThatAreClose(position){let{x,y}=position,entities=[];for(let j=y-1;j<=y+1;j++)if(!(j<0)&&!(j>=SquaresService.arenaSize))for(let i=x-1;i<=x+1;i++){if(i<0||i>=SquaresService.arenaSize||i===x&&j===y)continue;let newlyFoundEntities=EntitiesService.getEntitiesAtGivenPosition({x:i,y:j});entities=entities.concat(newlyFoundEntities)}return entities}}}}]);