.fancy-button {
  --text-color: #666;
  --text-color--hover: #666; //color-mix(in srgb, var(--text-color), white 20%);
  --text-color--active: hsl(from var(--text-color) h s calc(l * 2));

  --background-color: #111;
  --background-color--hover: #222;
  --background-color--active: #222; //hsl(from var(--background-color) h s calc(l * 0.5));;
  // BUG:
  // there is a bug in interaction between transition times and calculating colors from vars and other colors

  --shadow-color: var(--background-color);
  --shadow-color--hover: var(--background-color--hover);
  --shadow-color--active: var(--background-color--active);

  --side-border-color: var(--background-color);
  --side-border-color--hover: var(--background-color--hover);
  --side-border-color--active: var(--background-color--active);

  --side-border-style: dashed;
  --side-border-width: 9px;

  background: var(--background-color);
  color: var(--text-color);
  $t: transparent;
  font-family: Verdana;

  min-width: 50px;
  min-height: 32px;
  padding: 0 1em;
  position: relative;
  box-sizing: border-box;

  display: flex;
  justify-content: center;
  align-items: center;

  user-select: none;

  // BUG:
  // there is a bug in interaction between transition times and calculating colors from vars and other colors
  $transitionTime: 0.3s;
  transition:
    filter $transitionTime,
    color $transitionTime,
    background-color $transitionTime,
    border-color $transitionTime,
    border-left-color $transitionTime,
    border-right-color $transitionTime,
    text-shadow $transitionTime,
    all $transitionTime;

  &:before,
  &:after {
    content: "";
    position: absolute;
    border: var(--side-border-width) var(--side-border-style) $t;
    height: calc(100% - 2 * var(--side-border-width));
    z-index: -1;
    transition:
      border-color $transitionTime,
      border-left-color $transitionTime,
      border-right-color $transitionTime,
      box-shadow $transitionTime;
  }
  // to fix visual problems caused by non-integer border widths
  // when any zoom is applied (browser or system level),
  // we cover the gap with the shadow of the apropriate color.
  &:before {
    left: calc(-2 * var(--side-border-width));
    border-right-color: var(--side-border-color);
    box-shadow: 2px 0px 0px 0px var(--side-border-color); // *
  }
  &:after {
    right: calc(-2 * var(--side-border-width));
    border-left-color: var(--side-border-color);
    box-shadow: -2px 0px 0px 0px var(--side-border-color); // *
  }

  filter: drop-shadow(2px 2px 6px var(--shadow-color));

  &:hover {
    filter: drop-shadow(2px 4px 6px var(--shadow-color--hover));
    --text-color: var(--text-color--hover);
    text-shadow: var(--text-color) 0px 0px 1px;
    --background-color: var(--background-color--hover);
    --side-border-color: var(--side-border-color--hover);
    cursor: pointer;
    $transitionTime: 0.1s;
    transition:
      filter $transitionTime,
      color $transitionTime,
      text-shadow $transitionTime,
      background-color $transitionTime;

    &:after,
    &:before {
      transition:
        border-color $transitionTime,
        border-left-color $transitionTime,
        border-right-color $transitionTime,
        box-shadow $transitionTime;
    }
  }

  &:active {
    filter: drop-shadow(2px 4px 6px var(--shadow-color--active));
    color: var(--text-color--active);
    text-shadow: var(--text-color--active) 0px 0px 4px;
    background-color: var(--background-color--active);
    --side-border-color: var(--side-border-color--active);
    // transition:
    //   filter 0.1s,
    //   color 0.1s;
  }
}
